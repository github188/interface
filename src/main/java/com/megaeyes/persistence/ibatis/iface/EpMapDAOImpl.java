package com.megaeyes.persistence.ibatis.iface;

import com.megaeyes.persistence.ibatis.model.EpMap;
import com.megaeyes.persistence.ibatis.model.EpMapExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class EpMapDAOImpl extends SqlMapClientDaoSupport implements EpMapDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public EpMapDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public void insert(EpMap record) {
        getSqlMapClientTemplate().insert("EP_MAP.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public int updateByPrimaryKeyWithoutBLOBs(EpMap record) {
        int rows = getSqlMapClientTemplate().update("EP_MAP.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public int updateByPrimaryKeyWithBLOBs(EpMap record) {
        int rows = getSqlMapClientTemplate().update("EP_MAP.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public int updateByPrimaryKeySelective(EpMap record) {
        int rows = getSqlMapClientTemplate().update("EP_MAP.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public List selectByExampleWithoutBLOBs(EpMapExample example) {
        List list = getSqlMapClientTemplate().queryForList("EP_MAP.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public List selectByExampleWithBLOBs(EpMapExample example) {
        List list = getSqlMapClientTemplate().queryForList("EP_MAP.abatorgenerated_selectByExampleWithBLOBs", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public EpMap selectByPrimaryKey(String id) {
        EpMap key = new EpMap();
        key.setId(id);
        EpMap record = (EpMap) getSqlMapClientTemplate().queryForObject("EP_MAP.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public int deleteByExample(EpMapExample example) {
        int rows = getSqlMapClientTemplate().delete("EP_MAP.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_MAP
     *
     * @abatorgenerated Tue Apr 24 15:13:50 CST 2012
     */
    public int deleteByPrimaryKey(String id) {
        EpMap key = new EpMap();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("EP_MAP.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }
}