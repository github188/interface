package com.megaeyes.persistence.ibatis.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EpAssetsExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    public EpAssetsExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    protected EpAssetsExample(EpAssetsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table HBDW1.EP_ASSETS
     *
     * @abatorgenerated Fri May 25 07:14:29 GMT 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("TYPE is null");
            return this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("TYPE is not null");
            return this;
        }

        public Criteria andTypeEqualTo(BigDecimal value) {
            addCriterion("TYPE =", value, "type");
            return this;
        }

        public Criteria andTypeNotEqualTo(BigDecimal value) {
            addCriterion("TYPE <>", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThan(BigDecimal value) {
            addCriterion("TYPE >", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TYPE >=", value, "type");
            return this;
        }

        public Criteria andTypeLessThan(BigDecimal value) {
            addCriterion("TYPE <", value, "type");
            return this;
        }

        public Criteria andTypeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TYPE <=", value, "type");
            return this;
        }

        public Criteria andTypeIn(List values) {
            addCriterion("TYPE in", values, "type");
            return this;
        }

        public Criteria andTypeNotIn(List values) {
            addCriterion("TYPE not in", values, "type");
            return this;
        }

        public Criteria andTypeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TYPE between", value1, value2, "type");
            return this;
        }

        public Criteria andTypeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TYPE not between", value1, value2, "type");
            return this;
        }

        public Criteria andUseTimeIsNull() {
            addCriterion("USE_TIME is null");
            return this;
        }

        public Criteria andUseTimeIsNotNull() {
            addCriterion("USE_TIME is not null");
            return this;
        }

        public Criteria andUseTimeEqualTo(BigDecimal value) {
            addCriterion("USE_TIME =", value, "useTime");
            return this;
        }

        public Criteria andUseTimeNotEqualTo(BigDecimal value) {
            addCriterion("USE_TIME <>", value, "useTime");
            return this;
        }

        public Criteria andUseTimeGreaterThan(BigDecimal value) {
            addCriterion("USE_TIME >", value, "useTime");
            return this;
        }

        public Criteria andUseTimeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("USE_TIME >=", value, "useTime");
            return this;
        }

        public Criteria andUseTimeLessThan(BigDecimal value) {
            addCriterion("USE_TIME <", value, "useTime");
            return this;
        }

        public Criteria andUseTimeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("USE_TIME <=", value, "useTime");
            return this;
        }

        public Criteria andUseTimeIn(List values) {
            addCriterion("USE_TIME in", values, "useTime");
            return this;
        }

        public Criteria andUseTimeNotIn(List values) {
            addCriterion("USE_TIME not in", values, "useTime");
            return this;
        }

        public Criteria andUseTimeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USE_TIME between", value1, value2, "useTime");
            return this;
        }

        public Criteria andUseTimeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USE_TIME not between", value1, value2, "useTime");
            return this;
        }

        public Criteria andExpirationTimeIsNull() {
            addCriterion("EXPIRATION_TIME is null");
            return this;
        }

        public Criteria andExpirationTimeIsNotNull() {
            addCriterion("EXPIRATION_TIME is not null");
            return this;
        }

        public Criteria andExpirationTimeEqualTo(BigDecimal value) {
            addCriterion("EXPIRATION_TIME =", value, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeNotEqualTo(BigDecimal value) {
            addCriterion("EXPIRATION_TIME <>", value, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeGreaterThan(BigDecimal value) {
            addCriterion("EXPIRATION_TIME >", value, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EXPIRATION_TIME >=", value, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeLessThan(BigDecimal value) {
            addCriterion("EXPIRATION_TIME <", value, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EXPIRATION_TIME <=", value, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeIn(List values) {
            addCriterion("EXPIRATION_TIME in", values, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeNotIn(List values) {
            addCriterion("EXPIRATION_TIME not in", values, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXPIRATION_TIME between", value1, value2, "expirationTime");
            return this;
        }

        public Criteria andExpirationTimeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXPIRATION_TIME not between", value1, value2, "expirationTime");
            return this;
        }

        public Criteria andSignificantLevelIsNull() {
            addCriterion("SIGNIFICANT_LEVEL is null");
            return this;
        }

        public Criteria andSignificantLevelIsNotNull() {
            addCriterion("SIGNIFICANT_LEVEL is not null");
            return this;
        }

        public Criteria andSignificantLevelEqualTo(BigDecimal value) {
            addCriterion("SIGNIFICANT_LEVEL =", value, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelNotEqualTo(BigDecimal value) {
            addCriterion("SIGNIFICANT_LEVEL <>", value, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelGreaterThan(BigDecimal value) {
            addCriterion("SIGNIFICANT_LEVEL >", value, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SIGNIFICANT_LEVEL >=", value, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelLessThan(BigDecimal value) {
            addCriterion("SIGNIFICANT_LEVEL <", value, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SIGNIFICANT_LEVEL <=", value, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelIn(List values) {
            addCriterion("SIGNIFICANT_LEVEL in", values, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelNotIn(List values) {
            addCriterion("SIGNIFICANT_LEVEL not in", values, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SIGNIFICANT_LEVEL between", value1, value2, "significantLevel");
            return this;
        }

        public Criteria andSignificantLevelNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SIGNIFICANT_LEVEL not between", value1, value2, "significantLevel");
            return this;
        }

        public Criteria andDeviceNumberIsNull() {
            addCriterion("DEVICE_NUMBER is null");
            return this;
        }

        public Criteria andDeviceNumberIsNotNull() {
            addCriterion("DEVICE_NUMBER is not null");
            return this;
        }

        public Criteria andDeviceNumberEqualTo(String value) {
            addCriterion("DEVICE_NUMBER =", value, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberNotEqualTo(String value) {
            addCriterion("DEVICE_NUMBER <>", value, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberGreaterThan(String value) {
            addCriterion("DEVICE_NUMBER >", value, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberGreaterThanOrEqualTo(String value) {
            addCriterion("DEVICE_NUMBER >=", value, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberLessThan(String value) {
            addCriterion("DEVICE_NUMBER <", value, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberLessThanOrEqualTo(String value) {
            addCriterion("DEVICE_NUMBER <=", value, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberLike(String value) {
            addCriterion("DEVICE_NUMBER like", value, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberNotLike(String value) {
            addCriterion("DEVICE_NUMBER not like", value, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberIn(List values) {
            addCriterion("DEVICE_NUMBER in", values, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberNotIn(List values) {
            addCriterion("DEVICE_NUMBER not in", values, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberBetween(String value1, String value2) {
            addCriterion("DEVICE_NUMBER between", value1, value2, "deviceNumber");
            return this;
        }

        public Criteria andDeviceNumberNotBetween(String value1, String value2) {
            addCriterion("DEVICE_NUMBER not between", value1, value2, "deviceNumber");
            return this;
        }

        public Criteria andInstallLocationIsNull() {
            addCriterion("INSTALL_LOCATION is null");
            return this;
        }

        public Criteria andInstallLocationIsNotNull() {
            addCriterion("INSTALL_LOCATION is not null");
            return this;
        }

        public Criteria andInstallLocationEqualTo(String value) {
            addCriterion("INSTALL_LOCATION =", value, "installLocation");
            return this;
        }

        public Criteria andInstallLocationNotEqualTo(String value) {
            addCriterion("INSTALL_LOCATION <>", value, "installLocation");
            return this;
        }

        public Criteria andInstallLocationGreaterThan(String value) {
            addCriterion("INSTALL_LOCATION >", value, "installLocation");
            return this;
        }

        public Criteria andInstallLocationGreaterThanOrEqualTo(String value) {
            addCriterion("INSTALL_LOCATION >=", value, "installLocation");
            return this;
        }

        public Criteria andInstallLocationLessThan(String value) {
            addCriterion("INSTALL_LOCATION <", value, "installLocation");
            return this;
        }

        public Criteria andInstallLocationLessThanOrEqualTo(String value) {
            addCriterion("INSTALL_LOCATION <=", value, "installLocation");
            return this;
        }

        public Criteria andInstallLocationLike(String value) {
            addCriterion("INSTALL_LOCATION like", value, "installLocation");
            return this;
        }

        public Criteria andInstallLocationNotLike(String value) {
            addCriterion("INSTALL_LOCATION not like", value, "installLocation");
            return this;
        }

        public Criteria andInstallLocationIn(List values) {
            addCriterion("INSTALL_LOCATION in", values, "installLocation");
            return this;
        }

        public Criteria andInstallLocationNotIn(List values) {
            addCriterion("INSTALL_LOCATION not in", values, "installLocation");
            return this;
        }

        public Criteria andInstallLocationBetween(String value1, String value2) {
            addCriterion("INSTALL_LOCATION between", value1, value2, "installLocation");
            return this;
        }

        public Criteria andInstallLocationNotBetween(String value1, String value2) {
            addCriterion("INSTALL_LOCATION not between", value1, value2, "installLocation");
            return this;
        }
    }
}