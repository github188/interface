package com.megaeyes.persistence.ibatis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AcRScheduleGroupExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    public AcRScheduleGroupExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    protected AcRScheduleGroupExample(AcRScheduleGroupExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table AC_R_SCHEDULE_GROUP
     *
     * @abatorgenerated Tue Jan 08 07:46:33 GMT 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andGroupIdIsNull() {
            addCriterion("GROUP_ID is null");
            return this;
        }

        public Criteria andGroupIdIsNotNull() {
            addCriterion("GROUP_ID is not null");
            return this;
        }

        public Criteria andGroupIdEqualTo(String value) {
            addCriterion("GROUP_ID =", value, "groupId");
            return this;
        }

        public Criteria andGroupIdNotEqualTo(String value) {
            addCriterion("GROUP_ID <>", value, "groupId");
            return this;
        }

        public Criteria andGroupIdGreaterThan(String value) {
            addCriterion("GROUP_ID >", value, "groupId");
            return this;
        }

        public Criteria andGroupIdGreaterThanOrEqualTo(String value) {
            addCriterion("GROUP_ID >=", value, "groupId");
            return this;
        }

        public Criteria andGroupIdLessThan(String value) {
            addCriterion("GROUP_ID <", value, "groupId");
            return this;
        }

        public Criteria andGroupIdLessThanOrEqualTo(String value) {
            addCriterion("GROUP_ID <=", value, "groupId");
            return this;
        }

        public Criteria andGroupIdLike(String value) {
            addCriterion("GROUP_ID like", value, "groupId");
            return this;
        }

        public Criteria andGroupIdNotLike(String value) {
            addCriterion("GROUP_ID not like", value, "groupId");
            return this;
        }

        public Criteria andGroupIdIn(List values) {
            addCriterion("GROUP_ID in", values, "groupId");
            return this;
        }

        public Criteria andGroupIdNotIn(List values) {
            addCriterion("GROUP_ID not in", values, "groupId");
            return this;
        }

        public Criteria andGroupIdBetween(String value1, String value2) {
            addCriterion("GROUP_ID between", value1, value2, "groupId");
            return this;
        }

        public Criteria andGroupIdNotBetween(String value1, String value2) {
            addCriterion("GROUP_ID not between", value1, value2, "groupId");
            return this;
        }

        public Criteria andScheduleIdIsNull() {
            addCriterion("SCHEDULE_ID is null");
            return this;
        }

        public Criteria andScheduleIdIsNotNull() {
            addCriterion("SCHEDULE_ID is not null");
            return this;
        }

        public Criteria andScheduleIdEqualTo(String value) {
            addCriterion("SCHEDULE_ID =", value, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdNotEqualTo(String value) {
            addCriterion("SCHEDULE_ID <>", value, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdGreaterThan(String value) {
            addCriterion("SCHEDULE_ID >", value, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdGreaterThanOrEqualTo(String value) {
            addCriterion("SCHEDULE_ID >=", value, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdLessThan(String value) {
            addCriterion("SCHEDULE_ID <", value, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdLessThanOrEqualTo(String value) {
            addCriterion("SCHEDULE_ID <=", value, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdLike(String value) {
            addCriterion("SCHEDULE_ID like", value, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdNotLike(String value) {
            addCriterion("SCHEDULE_ID not like", value, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdIn(List values) {
            addCriterion("SCHEDULE_ID in", values, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdNotIn(List values) {
            addCriterion("SCHEDULE_ID not in", values, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdBetween(String value1, String value2) {
            addCriterion("SCHEDULE_ID between", value1, value2, "scheduleId");
            return this;
        }

        public Criteria andScheduleIdNotBetween(String value1, String value2) {
            addCriterion("SCHEDULE_ID not between", value1, value2, "scheduleId");
            return this;
        }
    }
}