package com.megaeyes.persistence.ibatis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EpRSchemeAlarmSourceExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table EP_R_SCHEME_ALARM_SOURCE
     *
     * @abatorgenerated Thu Apr 19 16:23:32 CST 2012
     */
    private String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table EP_R_SCHEME_ALARM_SOURCE
     *
     * @abatorgenerated Thu Apr 19 16:23:32 CST 2012
     */
    private List oredCriteria = new ArrayList();

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_SCHEME_ALARM_SOURCE
     *
     * @abatorgenerated Thu Apr 19 16:23:32 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_SCHEME_ALARM_SOURCE
     *
     * @abatorgenerated Thu Apr 19 16:23:32 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_SCHEME_ALARM_SOURCE
     *
     * @abatorgenerated Thu Apr 19 16:23:32 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_SCHEME_ALARM_SOURCE
     *
     * @abatorgenerated Thu Apr 19 16:23:32 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_SCHEME_ALARM_SOURCE
     *
     * @abatorgenerated Thu Apr 19 16:23:32 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = new Criteria();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table EP_R_SCHEME_ALARM_SOURCE
     *
     * @abatorgenerated Thu Apr 19 16:23:32 CST 2012
     */
    public static class Criteria {
        private List criteriaWithoutValue;

        private List criteriaWithSingleValue;

        private List criteriaWithListValue;

        private List criteriaWithBetweenValue;

        private Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        private void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        private void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        private void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            criteriaWithoutValue.add("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            criteriaWithoutValue.add("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andEpSchemeIdIsNull() {
            criteriaWithoutValue.add("EP_SCHEME_ID is null");
            return this;
        }

        public Criteria andEpSchemeIdIsNotNull() {
            criteriaWithoutValue.add("EP_SCHEME_ID is not null");
            return this;
        }

        public Criteria andEpSchemeIdEqualTo(String value) {
            addCriterion("EP_SCHEME_ID =", value, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdNotEqualTo(String value) {
            addCriterion("EP_SCHEME_ID <>", value, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdGreaterThan(String value) {
            addCriterion("EP_SCHEME_ID >", value, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdGreaterThanOrEqualTo(String value) {
            addCriterion("EP_SCHEME_ID >=", value, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdLessThan(String value) {
            addCriterion("EP_SCHEME_ID <", value, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdLessThanOrEqualTo(String value) {
            addCriterion("EP_SCHEME_ID <=", value, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdLike(String value) {
            addCriterion("EP_SCHEME_ID like", value, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdNotLike(String value) {
            addCriterion("EP_SCHEME_ID not like", value, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdIn(List values) {
            addCriterion("EP_SCHEME_ID in", values, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdNotIn(List values) {
            addCriterion("EP_SCHEME_ID not in", values, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdBetween(String value1, String value2) {
            addCriterion("EP_SCHEME_ID between", value1, value2, "epSchemeId");
            return this;
        }

        public Criteria andEpSchemeIdNotBetween(String value1, String value2) {
            addCriterion("EP_SCHEME_ID not between", value1, value2, "epSchemeId");
            return this;
        }

        public Criteria andSourceIdIsNull() {
            criteriaWithoutValue.add("SOURCE_ID is null");
            return this;
        }

        public Criteria andSourceIdIsNotNull() {
            criteriaWithoutValue.add("SOURCE_ID is not null");
            return this;
        }

        public Criteria andSourceIdEqualTo(String value) {
            addCriterion("SOURCE_ID =", value, "sourceId");
            return this;
        }

        public Criteria andSourceIdNotEqualTo(String value) {
            addCriterion("SOURCE_ID <>", value, "sourceId");
            return this;
        }

        public Criteria andSourceIdGreaterThan(String value) {
            addCriterion("SOURCE_ID >", value, "sourceId");
            return this;
        }

        public Criteria andSourceIdGreaterThanOrEqualTo(String value) {
            addCriterion("SOURCE_ID >=", value, "sourceId");
            return this;
        }

        public Criteria andSourceIdLessThan(String value) {
            addCriterion("SOURCE_ID <", value, "sourceId");
            return this;
        }

        public Criteria andSourceIdLessThanOrEqualTo(String value) {
            addCriterion("SOURCE_ID <=", value, "sourceId");
            return this;
        }

        public Criteria andSourceIdLike(String value) {
            addCriterion("SOURCE_ID like", value, "sourceId");
            return this;
        }

        public Criteria andSourceIdNotLike(String value) {
            addCriterion("SOURCE_ID not like", value, "sourceId");
            return this;
        }

        public Criteria andSourceIdIn(List values) {
            addCriterion("SOURCE_ID in", values, "sourceId");
            return this;
        }

        public Criteria andSourceIdNotIn(List values) {
            addCriterion("SOURCE_ID not in", values, "sourceId");
            return this;
        }

        public Criteria andSourceIdBetween(String value1, String value2) {
            addCriterion("SOURCE_ID between", value1, value2, "sourceId");
            return this;
        }

        public Criteria andSourceIdNotBetween(String value1, String value2) {
            addCriterion("SOURCE_ID not between", value1, value2, "sourceId");
            return this;
        }

        public Criteria andSourceTypeIsNull() {
            criteriaWithoutValue.add("SOURCE_TYPE is null");
            return this;
        }

        public Criteria andSourceTypeIsNotNull() {
            criteriaWithoutValue.add("SOURCE_TYPE is not null");
            return this;
        }

        public Criteria andSourceTypeEqualTo(String value) {
            addCriterion("SOURCE_TYPE =", value, "sourceType");
            return this;
        }

        public Criteria andSourceTypeNotEqualTo(String value) {
            addCriterion("SOURCE_TYPE <>", value, "sourceType");
            return this;
        }

        public Criteria andSourceTypeGreaterThan(String value) {
            addCriterion("SOURCE_TYPE >", value, "sourceType");
            return this;
        }

        public Criteria andSourceTypeGreaterThanOrEqualTo(String value) {
            addCriterion("SOURCE_TYPE >=", value, "sourceType");
            return this;
        }

        public Criteria andSourceTypeLessThan(String value) {
            addCriterion("SOURCE_TYPE <", value, "sourceType");
            return this;
        }

        public Criteria andSourceTypeLessThanOrEqualTo(String value) {
            addCriterion("SOURCE_TYPE <=", value, "sourceType");
            return this;
        }

        public Criteria andSourceTypeLike(String value) {
            addCriterion("SOURCE_TYPE like", value, "sourceType");
            return this;
        }

        public Criteria andSourceTypeNotLike(String value) {
            addCriterion("SOURCE_TYPE not like", value, "sourceType");
            return this;
        }

        public Criteria andSourceTypeIn(List values) {
            addCriterion("SOURCE_TYPE in", values, "sourceType");
            return this;
        }

        public Criteria andSourceTypeNotIn(List values) {
            addCriterion("SOURCE_TYPE not in", values, "sourceType");
            return this;
        }

        public Criteria andSourceTypeBetween(String value1, String value2) {
            addCriterion("SOURCE_TYPE between", value1, value2, "sourceType");
            return this;
        }

        public Criteria andSourceTypeNotBetween(String value1, String value2) {
            addCriterion("SOURCE_TYPE not between", value1, value2, "sourceType");
            return this;
        }

        public Criteria andAlarmTypeIsNull() {
            criteriaWithoutValue.add("ALARM_TYPE is null");
            return this;
        }

        public Criteria andAlarmTypeIsNotNull() {
            criteriaWithoutValue.add("ALARM_TYPE is not null");
            return this;
        }

        public Criteria andAlarmTypeEqualTo(String value) {
            addCriterion("ALARM_TYPE =", value, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeNotEqualTo(String value) {
            addCriterion("ALARM_TYPE <>", value, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeGreaterThan(String value) {
            addCriterion("ALARM_TYPE >", value, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeGreaterThanOrEqualTo(String value) {
            addCriterion("ALARM_TYPE >=", value, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeLessThan(String value) {
            addCriterion("ALARM_TYPE <", value, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeLessThanOrEqualTo(String value) {
            addCriterion("ALARM_TYPE <=", value, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeLike(String value) {
            addCriterion("ALARM_TYPE like", value, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeNotLike(String value) {
            addCriterion("ALARM_TYPE not like", value, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeIn(List values) {
            addCriterion("ALARM_TYPE in", values, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeNotIn(List values) {
            addCriterion("ALARM_TYPE not in", values, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeBetween(String value1, String value2) {
            addCriterion("ALARM_TYPE between", value1, value2, "alarmType");
            return this;
        }

        public Criteria andAlarmTypeNotBetween(String value1, String value2) {
            addCriterion("ALARM_TYPE not between", value1, value2, "alarmType");
            return this;
        }
    }
}