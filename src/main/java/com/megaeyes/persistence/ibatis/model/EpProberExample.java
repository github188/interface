package com.megaeyes.persistence.ibatis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EpProberExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table EP_PROBER
     *
     * @abatorgenerated Mon May 07 15:44:50 CST 2012
     */
    private String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table EP_PROBER
     *
     * @abatorgenerated Mon May 07 15:44:50 CST 2012
     */
    private List oredCriteria = new ArrayList();

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_PROBER
     *
     * @abatorgenerated Mon May 07 15:44:50 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_PROBER
     *
     * @abatorgenerated Mon May 07 15:44:50 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_PROBER
     *
     * @abatorgenerated Mon May 07 15:44:50 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_PROBER
     *
     * @abatorgenerated Mon May 07 15:44:50 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_PROBER
     *
     * @abatorgenerated Mon May 07 15:44:50 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = new Criteria();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table EP_PROBER
     *
     * @abatorgenerated Mon May 07 15:44:50 CST 2012
     */
    public static class Criteria {
        private List criteriaWithoutValue;

        private List criteriaWithSingleValue;

        private List criteriaWithListValue;

        private List criteriaWithBetweenValue;

        private Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        private void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        private void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        private void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            criteriaWithoutValue.add("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            criteriaWithoutValue.add("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andControlServerIdIsNull() {
            criteriaWithoutValue.add("CONTROL_SERVER_ID is null");
            return this;
        }

        public Criteria andControlServerIdIsNotNull() {
            criteriaWithoutValue.add("CONTROL_SERVER_ID is not null");
            return this;
        }

        public Criteria andControlServerIdEqualTo(String value) {
            addCriterion("CONTROL_SERVER_ID =", value, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdNotEqualTo(String value) {
            addCriterion("CONTROL_SERVER_ID <>", value, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdGreaterThan(String value) {
            addCriterion("CONTROL_SERVER_ID >", value, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdGreaterThanOrEqualTo(String value) {
            addCriterion("CONTROL_SERVER_ID >=", value, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdLessThan(String value) {
            addCriterion("CONTROL_SERVER_ID <", value, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdLessThanOrEqualTo(String value) {
            addCriterion("CONTROL_SERVER_ID <=", value, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdLike(String value) {
            addCriterion("CONTROL_SERVER_ID like", value, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdNotLike(String value) {
            addCriterion("CONTROL_SERVER_ID not like", value, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdIn(List values) {
            addCriterion("CONTROL_SERVER_ID in", values, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdNotIn(List values) {
            addCriterion("CONTROL_SERVER_ID not in", values, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdBetween(String value1, String value2) {
            addCriterion("CONTROL_SERVER_ID between", value1, value2, "controlServerId");
            return this;
        }

        public Criteria andControlServerIdNotBetween(String value1, String value2) {
            addCriterion("CONTROL_SERVER_ID not between", value1, value2, "controlServerId");
            return this;
        }

        public Criteria andEpProberTypeIdIsNull() {
            criteriaWithoutValue.add("EP_PROBER_TYPE_ID is null");
            return this;
        }

        public Criteria andEpProberTypeIdIsNotNull() {
            criteriaWithoutValue.add("EP_PROBER_TYPE_ID is not null");
            return this;
        }

        public Criteria andEpProberTypeIdEqualTo(String value) {
            addCriterion("EP_PROBER_TYPE_ID =", value, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdNotEqualTo(String value) {
            addCriterion("EP_PROBER_TYPE_ID <>", value, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdGreaterThan(String value) {
            addCriterion("EP_PROBER_TYPE_ID >", value, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdGreaterThanOrEqualTo(String value) {
            addCriterion("EP_PROBER_TYPE_ID >=", value, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdLessThan(String value) {
            addCriterion("EP_PROBER_TYPE_ID <", value, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdLessThanOrEqualTo(String value) {
            addCriterion("EP_PROBER_TYPE_ID <=", value, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdLike(String value) {
            addCriterion("EP_PROBER_TYPE_ID like", value, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdNotLike(String value) {
            addCriterion("EP_PROBER_TYPE_ID not like", value, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdIn(List values) {
            addCriterion("EP_PROBER_TYPE_ID in", values, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdNotIn(List values) {
            addCriterion("EP_PROBER_TYPE_ID not in", values, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdBetween(String value1, String value2) {
            addCriterion("EP_PROBER_TYPE_ID between", value1, value2, "epProberTypeId");
            return this;
        }

        public Criteria andEpProberTypeIdNotBetween(String value1, String value2) {
            addCriterion("EP_PROBER_TYPE_ID not between", value1, value2, "epProberTypeId");
            return this;
        }

        public Criteria andChannelNumberIsNull() {
            criteriaWithoutValue.add("CHANNEL_NUMBER is null");
            return this;
        }

        public Criteria andChannelNumberIsNotNull() {
            criteriaWithoutValue.add("CHANNEL_NUMBER is not null");
            return this;
        }

        public Criteria andChannelNumberEqualTo(Short value) {
            addCriterion("CHANNEL_NUMBER =", value, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberNotEqualTo(Short value) {
            addCriterion("CHANNEL_NUMBER <>", value, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberGreaterThan(Short value) {
            addCriterion("CHANNEL_NUMBER >", value, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberGreaterThanOrEqualTo(Short value) {
            addCriterion("CHANNEL_NUMBER >=", value, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberLessThan(Short value) {
            addCriterion("CHANNEL_NUMBER <", value, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberLessThanOrEqualTo(Short value) {
            addCriterion("CHANNEL_NUMBER <=", value, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberIn(List values) {
            addCriterion("CHANNEL_NUMBER in", values, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberNotIn(List values) {
            addCriterion("CHANNEL_NUMBER not in", values, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberBetween(Short value1, Short value2) {
            addCriterion("CHANNEL_NUMBER between", value1, value2, "channelNumber");
            return this;
        }

        public Criteria andChannelNumberNotBetween(Short value1, Short value2) {
            addCriterion("CHANNEL_NUMBER not between", value1, value2, "channelNumber");
            return this;
        }

        public Criteria andSchemeIsNull() {
            criteriaWithoutValue.add("SCHEME is null");
            return this;
        }

        public Criteria andSchemeIsNotNull() {
            criteriaWithoutValue.add("SCHEME is not null");
            return this;
        }

        public Criteria andSchemeEqualTo(String value) {
            addCriterion("SCHEME =", value, "scheme");
            return this;
        }

        public Criteria andSchemeNotEqualTo(String value) {
            addCriterion("SCHEME <>", value, "scheme");
            return this;
        }

        public Criteria andSchemeGreaterThan(String value) {
            addCriterion("SCHEME >", value, "scheme");
            return this;
        }

        public Criteria andSchemeGreaterThanOrEqualTo(String value) {
            addCriterion("SCHEME >=", value, "scheme");
            return this;
        }

        public Criteria andSchemeLessThan(String value) {
            addCriterion("SCHEME <", value, "scheme");
            return this;
        }

        public Criteria andSchemeLessThanOrEqualTo(String value) {
            addCriterion("SCHEME <=", value, "scheme");
            return this;
        }

        public Criteria andSchemeLike(String value) {
            addCriterion("SCHEME like", value, "scheme");
            return this;
        }

        public Criteria andSchemeNotLike(String value) {
            addCriterion("SCHEME not like", value, "scheme");
            return this;
        }

        public Criteria andSchemeIn(List values) {
            addCriterion("SCHEME in", values, "scheme");
            return this;
        }

        public Criteria andSchemeNotIn(List values) {
            addCriterion("SCHEME not in", values, "scheme");
            return this;
        }

        public Criteria andSchemeBetween(String value1, String value2) {
            addCriterion("SCHEME between", value1, value2, "scheme");
            return this;
        }

        public Criteria andSchemeNotBetween(String value1, String value2) {
            addCriterion("SCHEME not between", value1, value2, "scheme");
            return this;
        }

        public Criteria andNameIsNull() {
            criteriaWithoutValue.add("NAME is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            criteriaWithoutValue.add("NAME is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List values) {
            addCriterion("NAME in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List values) {
            addCriterion("NAME not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return this;
        }

        public Criteria andNoteIsNull() {
            criteriaWithoutValue.add("NOTE is null");
            return this;
        }

        public Criteria andNoteIsNotNull() {
            criteriaWithoutValue.add("NOTE is not null");
            return this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("NOTE =", value, "note");
            return this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("NOTE <>", value, "note");
            return this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("NOTE >", value, "note");
            return this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("NOTE >=", value, "note");
            return this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("NOTE <", value, "note");
            return this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("NOTE <=", value, "note");
            return this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("NOTE like", value, "note");
            return this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("NOTE not like", value, "note");
            return this;
        }

        public Criteria andNoteIn(List values) {
            addCriterion("NOTE in", values, "note");
            return this;
        }

        public Criteria andNoteNotIn(List values) {
            addCriterion("NOTE not in", values, "note");
            return this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("NOTE between", value1, value2, "note");
            return this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("NOTE not between", value1, value2, "note");
            return this;
        }

        public Criteria andMaxLimitIsNull() {
            criteriaWithoutValue.add("MAX_LIMIT is null");
            return this;
        }

        public Criteria andMaxLimitIsNotNull() {
            criteriaWithoutValue.add("MAX_LIMIT is not null");
            return this;
        }

        public Criteria andMaxLimitEqualTo(Integer value) {
            addCriterion("MAX_LIMIT =", value, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitNotEqualTo(Integer value) {
            addCriterion("MAX_LIMIT <>", value, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitGreaterThan(Integer value) {
            addCriterion("MAX_LIMIT >", value, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitGreaterThanOrEqualTo(Integer value) {
            addCriterion("MAX_LIMIT >=", value, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitLessThan(Integer value) {
            addCriterion("MAX_LIMIT <", value, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitLessThanOrEqualTo(Integer value) {
            addCriterion("MAX_LIMIT <=", value, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitIn(List values) {
            addCriterion("MAX_LIMIT in", values, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitNotIn(List values) {
            addCriterion("MAX_LIMIT not in", values, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitBetween(Integer value1, Integer value2) {
            addCriterion("MAX_LIMIT between", value1, value2, "maxLimit");
            return this;
        }

        public Criteria andMaxLimitNotBetween(Integer value1, Integer value2) {
            addCriterion("MAX_LIMIT not between", value1, value2, "maxLimit");
            return this;
        }

        public Criteria andMinLimitIsNull() {
            criteriaWithoutValue.add("MIN_LIMIT is null");
            return this;
        }

        public Criteria andMinLimitIsNotNull() {
            criteriaWithoutValue.add("MIN_LIMIT is not null");
            return this;
        }

        public Criteria andMinLimitEqualTo(Integer value) {
            addCriterion("MIN_LIMIT =", value, "minLimit");
            return this;
        }

        public Criteria andMinLimitNotEqualTo(Integer value) {
            addCriterion("MIN_LIMIT <>", value, "minLimit");
            return this;
        }

        public Criteria andMinLimitGreaterThan(Integer value) {
            addCriterion("MIN_LIMIT >", value, "minLimit");
            return this;
        }

        public Criteria andMinLimitGreaterThanOrEqualTo(Integer value) {
            addCriterion("MIN_LIMIT >=", value, "minLimit");
            return this;
        }

        public Criteria andMinLimitLessThan(Integer value) {
            addCriterion("MIN_LIMIT <", value, "minLimit");
            return this;
        }

        public Criteria andMinLimitLessThanOrEqualTo(Integer value) {
            addCriterion("MIN_LIMIT <=", value, "minLimit");
            return this;
        }

        public Criteria andMinLimitIn(List values) {
            addCriterion("MIN_LIMIT in", values, "minLimit");
            return this;
        }

        public Criteria andMinLimitNotIn(List values) {
            addCriterion("MIN_LIMIT not in", values, "minLimit");
            return this;
        }

        public Criteria andMinLimitBetween(Integer value1, Integer value2) {
            addCriterion("MIN_LIMIT between", value1, value2, "minLimit");
            return this;
        }

        public Criteria andMinLimitNotBetween(Integer value1, Integer value2) {
            addCriterion("MIN_LIMIT not between", value1, value2, "minLimit");
            return this;
        }

        public Criteria andCycleIsNull() {
            criteriaWithoutValue.add("CYCLE is null");
            return this;
        }

        public Criteria andCycleIsNotNull() {
            criteriaWithoutValue.add("CYCLE is not null");
            return this;
        }

        public Criteria andCycleEqualTo(Integer value) {
            addCriterion("CYCLE =", value, "cycle");
            return this;
        }

        public Criteria andCycleNotEqualTo(Integer value) {
            addCriterion("CYCLE <>", value, "cycle");
            return this;
        }

        public Criteria andCycleGreaterThan(Integer value) {
            addCriterion("CYCLE >", value, "cycle");
            return this;
        }

        public Criteria andCycleGreaterThanOrEqualTo(Integer value) {
            addCriterion("CYCLE >=", value, "cycle");
            return this;
        }

        public Criteria andCycleLessThan(Integer value) {
            addCriterion("CYCLE <", value, "cycle");
            return this;
        }

        public Criteria andCycleLessThanOrEqualTo(Integer value) {
            addCriterion("CYCLE <=", value, "cycle");
            return this;
        }

        public Criteria andCycleIn(List values) {
            addCriterion("CYCLE in", values, "cycle");
            return this;
        }

        public Criteria andCycleNotIn(List values) {
            addCriterion("CYCLE not in", values, "cycle");
            return this;
        }

        public Criteria andCycleBetween(Integer value1, Integer value2) {
            addCriterion("CYCLE between", value1, value2, "cycle");
            return this;
        }

        public Criteria andCycleNotBetween(Integer value1, Integer value2) {
            addCriterion("CYCLE not between", value1, value2, "cycle");
            return this;
        }

        public Criteria andAddressIsNull() {
            criteriaWithoutValue.add("ADDRESS is null");
            return this;
        }

        public Criteria andAddressIsNotNull() {
            criteriaWithoutValue.add("ADDRESS is not null");
            return this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("ADDRESS =", value, "address");
            return this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("ADDRESS <>", value, "address");
            return this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("ADDRESS >", value, "address");
            return this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("ADDRESS >=", value, "address");
            return this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("ADDRESS <", value, "address");
            return this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("ADDRESS <=", value, "address");
            return this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("ADDRESS like", value, "address");
            return this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("ADDRESS not like", value, "address");
            return this;
        }

        public Criteria andAddressIn(List values) {
            addCriterion("ADDRESS in", values, "address");
            return this;
        }

        public Criteria andAddressNotIn(List values) {
            addCriterion("ADDRESS not in", values, "address");
            return this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("ADDRESS between", value1, value2, "address");
            return this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("ADDRESS not between", value1, value2, "address");
            return this;
        }

        public Criteria andLengthIsNull() {
            criteriaWithoutValue.add("LENGTH is null");
            return this;
        }

        public Criteria andLengthIsNotNull() {
            criteriaWithoutValue.add("LENGTH is not null");
            return this;
        }

        public Criteria andLengthEqualTo(String value) {
            addCriterion("LENGTH =", value, "length");
            return this;
        }

        public Criteria andLengthNotEqualTo(String value) {
            addCriterion("LENGTH <>", value, "length");
            return this;
        }

        public Criteria andLengthGreaterThan(String value) {
            addCriterion("LENGTH >", value, "length");
            return this;
        }

        public Criteria andLengthGreaterThanOrEqualTo(String value) {
            addCriterion("LENGTH >=", value, "length");
            return this;
        }

        public Criteria andLengthLessThan(String value) {
            addCriterion("LENGTH <", value, "length");
            return this;
        }

        public Criteria andLengthLessThanOrEqualTo(String value) {
            addCriterion("LENGTH <=", value, "length");
            return this;
        }

        public Criteria andLengthLike(String value) {
            addCriterion("LENGTH like", value, "length");
            return this;
        }

        public Criteria andLengthNotLike(String value) {
            addCriterion("LENGTH not like", value, "length");
            return this;
        }

        public Criteria andLengthIn(List values) {
            addCriterion("LENGTH in", values, "length");
            return this;
        }

        public Criteria andLengthNotIn(List values) {
            addCriterion("LENGTH not in", values, "length");
            return this;
        }

        public Criteria andLengthBetween(String value1, String value2) {
            addCriterion("LENGTH between", value1, value2, "length");
            return this;
        }

        public Criteria andLengthNotBetween(String value1, String value2) {
            addCriterion("LENGTH not between", value1, value2, "length");
            return this;
        }

        public Criteria andIsWarnIsNull() {
            criteriaWithoutValue.add("IS_WARN is null");
            return this;
        }

        public Criteria andIsWarnIsNotNull() {
            criteriaWithoutValue.add("IS_WARN is not null");
            return this;
        }

        public Criteria andIsWarnEqualTo(Integer value) {
            addCriterion("IS_WARN =", value, "isWarn");
            return this;
        }

        public Criteria andIsWarnNotEqualTo(Integer value) {
            addCriterion("IS_WARN <>", value, "isWarn");
            return this;
        }

        public Criteria andIsWarnGreaterThan(Integer value) {
            addCriterion("IS_WARN >", value, "isWarn");
            return this;
        }

        public Criteria andIsWarnGreaterThanOrEqualTo(Integer value) {
            addCriterion("IS_WARN >=", value, "isWarn");
            return this;
        }

        public Criteria andIsWarnLessThan(Integer value) {
            addCriterion("IS_WARN <", value, "isWarn");
            return this;
        }

        public Criteria andIsWarnLessThanOrEqualTo(Integer value) {
            addCriterion("IS_WARN <=", value, "isWarn");
            return this;
        }

        public Criteria andIsWarnIn(List values) {
            addCriterion("IS_WARN in", values, "isWarn");
            return this;
        }

        public Criteria andIsWarnNotIn(List values) {
            addCriterion("IS_WARN not in", values, "isWarn");
            return this;
        }

        public Criteria andIsWarnBetween(Integer value1, Integer value2) {
            addCriterion("IS_WARN between", value1, value2, "isWarn");
            return this;
        }

        public Criteria andIsWarnNotBetween(Integer value1, Integer value2) {
            addCriterion("IS_WARN not between", value1, value2, "isWarn");
            return this;
        }

        public Criteria andBoolWarnIsNull() {
            criteriaWithoutValue.add("BOOL_WARN is null");
            return this;
        }

        public Criteria andBoolWarnIsNotNull() {
            criteriaWithoutValue.add("BOOL_WARN is not null");
            return this;
        }

        public Criteria andBoolWarnEqualTo(Integer value) {
            addCriterion("BOOL_WARN =", value, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnNotEqualTo(Integer value) {
            addCriterion("BOOL_WARN <>", value, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnGreaterThan(Integer value) {
            addCriterion("BOOL_WARN >", value, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnGreaterThanOrEqualTo(Integer value) {
            addCriterion("BOOL_WARN >=", value, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnLessThan(Integer value) {
            addCriterion("BOOL_WARN <", value, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnLessThanOrEqualTo(Integer value) {
            addCriterion("BOOL_WARN <=", value, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnIn(List values) {
            addCriterion("BOOL_WARN in", values, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnNotIn(List values) {
            addCriterion("BOOL_WARN not in", values, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnBetween(Integer value1, Integer value2) {
            addCriterion("BOOL_WARN between", value1, value2, "boolWarn");
            return this;
        }

        public Criteria andBoolWarnNotBetween(Integer value1, Integer value2) {
            addCriterion("BOOL_WARN not between", value1, value2, "boolWarn");
            return this;
        }

        public Criteria andDataTypeIsNull() {
            criteriaWithoutValue.add("DATA_TYPE is null");
            return this;
        }

        public Criteria andDataTypeIsNotNull() {
            criteriaWithoutValue.add("DATA_TYPE is not null");
            return this;
        }

        public Criteria andDataTypeEqualTo(String value) {
            addCriterion("DATA_TYPE =", value, "dataType");
            return this;
        }

        public Criteria andDataTypeNotEqualTo(String value) {
            addCriterion("DATA_TYPE <>", value, "dataType");
            return this;
        }

        public Criteria andDataTypeGreaterThan(String value) {
            addCriterion("DATA_TYPE >", value, "dataType");
            return this;
        }

        public Criteria andDataTypeGreaterThanOrEqualTo(String value) {
            addCriterion("DATA_TYPE >=", value, "dataType");
            return this;
        }

        public Criteria andDataTypeLessThan(String value) {
            addCriterion("DATA_TYPE <", value, "dataType");
            return this;
        }

        public Criteria andDataTypeLessThanOrEqualTo(String value) {
            addCriterion("DATA_TYPE <=", value, "dataType");
            return this;
        }

        public Criteria andDataTypeLike(String value) {
            addCriterion("DATA_TYPE like", value, "dataType");
            return this;
        }

        public Criteria andDataTypeNotLike(String value) {
            addCriterion("DATA_TYPE not like", value, "dataType");
            return this;
        }

        public Criteria andDataTypeIn(List values) {
            addCriterion("DATA_TYPE in", values, "dataType");
            return this;
        }

        public Criteria andDataTypeNotIn(List values) {
            addCriterion("DATA_TYPE not in", values, "dataType");
            return this;
        }

        public Criteria andDataTypeBetween(String value1, String value2) {
            addCriterion("DATA_TYPE between", value1, value2, "dataType");
            return this;
        }

        public Criteria andDataTypeNotBetween(String value1, String value2) {
            addCriterion("DATA_TYPE not between", value1, value2, "dataType");
            return this;
        }

        public Criteria andPositionIsNull() {
            criteriaWithoutValue.add("POSITION is null");
            return this;
        }

        public Criteria andPositionIsNotNull() {
            criteriaWithoutValue.add("POSITION is not null");
            return this;
        }

        public Criteria andPositionEqualTo(String value) {
            addCriterion("POSITION =", value, "position");
            return this;
        }

        public Criteria andPositionNotEqualTo(String value) {
            addCriterion("POSITION <>", value, "position");
            return this;
        }

        public Criteria andPositionGreaterThan(String value) {
            addCriterion("POSITION >", value, "position");
            return this;
        }

        public Criteria andPositionGreaterThanOrEqualTo(String value) {
            addCriterion("POSITION >=", value, "position");
            return this;
        }

        public Criteria andPositionLessThan(String value) {
            addCriterion("POSITION <", value, "position");
            return this;
        }

        public Criteria andPositionLessThanOrEqualTo(String value) {
            addCriterion("POSITION <=", value, "position");
            return this;
        }

        public Criteria andPositionLike(String value) {
            addCriterion("POSITION like", value, "position");
            return this;
        }

        public Criteria andPositionNotLike(String value) {
            addCriterion("POSITION not like", value, "position");
            return this;
        }

        public Criteria andPositionIn(List values) {
            addCriterion("POSITION in", values, "position");
            return this;
        }

        public Criteria andPositionNotIn(List values) {
            addCriterion("POSITION not in", values, "position");
            return this;
        }

        public Criteria andPositionBetween(String value1, String value2) {
            addCriterion("POSITION between", value1, value2, "position");
            return this;
        }

        public Criteria andPositionNotBetween(String value1, String value2) {
            addCriterion("POSITION not between", value1, value2, "position");
            return this;
        }

        public Criteria andRegisterReverseIsNull() {
            criteriaWithoutValue.add("REGISTER_REVERSE is null");
            return this;
        }

        public Criteria andRegisterReverseIsNotNull() {
            criteriaWithoutValue.add("REGISTER_REVERSE is not null");
            return this;
        }

        public Criteria andRegisterReverseEqualTo(Integer value) {
            addCriterion("REGISTER_REVERSE =", value, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseNotEqualTo(Integer value) {
            addCriterion("REGISTER_REVERSE <>", value, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseGreaterThan(Integer value) {
            addCriterion("REGISTER_REVERSE >", value, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseGreaterThanOrEqualTo(Integer value) {
            addCriterion("REGISTER_REVERSE >=", value, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseLessThan(Integer value) {
            addCriterion("REGISTER_REVERSE <", value, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseLessThanOrEqualTo(Integer value) {
            addCriterion("REGISTER_REVERSE <=", value, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseIn(List values) {
            addCriterion("REGISTER_REVERSE in", values, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseNotIn(List values) {
            addCriterion("REGISTER_REVERSE not in", values, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseBetween(Integer value1, Integer value2) {
            addCriterion("REGISTER_REVERSE between", value1, value2, "registerReverse");
            return this;
        }

        public Criteria andRegisterReverseNotBetween(Integer value1, Integer value2) {
            addCriterion("REGISTER_REVERSE not between", value1, value2, "registerReverse");
            return this;
        }

        public Criteria andPlcIoSaveCycleIsNull() {
            criteriaWithoutValue.add("PLC_IO_SAVE_CYCLE is null");
            return this;
        }

        public Criteria andPlcIoSaveCycleIsNotNull() {
            criteriaWithoutValue.add("PLC_IO_SAVE_CYCLE is not null");
            return this;
        }

        public Criteria andPlcIoSaveCycleEqualTo(Integer value) {
            addCriterion("PLC_IO_SAVE_CYCLE =", value, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleNotEqualTo(Integer value) {
            addCriterion("PLC_IO_SAVE_CYCLE <>", value, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleGreaterThan(Integer value) {
            addCriterion("PLC_IO_SAVE_CYCLE >", value, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleGreaterThanOrEqualTo(Integer value) {
            addCriterion("PLC_IO_SAVE_CYCLE >=", value, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleLessThan(Integer value) {
            addCriterion("PLC_IO_SAVE_CYCLE <", value, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleLessThanOrEqualTo(Integer value) {
            addCriterion("PLC_IO_SAVE_CYCLE <=", value, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleIn(List values) {
            addCriterion("PLC_IO_SAVE_CYCLE in", values, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleNotIn(List values) {
            addCriterion("PLC_IO_SAVE_CYCLE not in", values, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleBetween(Integer value1, Integer value2) {
            addCriterion("PLC_IO_SAVE_CYCLE between", value1, value2, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveCycleNotBetween(Integer value1, Integer value2) {
            addCriterion("PLC_IO_SAVE_CYCLE not between", value1, value2, "plcIoSaveCycle");
            return this;
        }

        public Criteria andPlcIoSaveTypeIsNull() {
            criteriaWithoutValue.add("PLC_IO_SAVE_TYPE is null");
            return this;
        }

        public Criteria andPlcIoSaveTypeIsNotNull() {
            criteriaWithoutValue.add("PLC_IO_SAVE_TYPE is not null");
            return this;
        }

        public Criteria andPlcIoSaveTypeEqualTo(String value) {
            addCriterion("PLC_IO_SAVE_TYPE =", value, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeNotEqualTo(String value) {
            addCriterion("PLC_IO_SAVE_TYPE <>", value, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeGreaterThan(String value) {
            addCriterion("PLC_IO_SAVE_TYPE >", value, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeGreaterThanOrEqualTo(String value) {
            addCriterion("PLC_IO_SAVE_TYPE >=", value, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeLessThan(String value) {
            addCriterion("PLC_IO_SAVE_TYPE <", value, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeLessThanOrEqualTo(String value) {
            addCriterion("PLC_IO_SAVE_TYPE <=", value, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeLike(String value) {
            addCriterion("PLC_IO_SAVE_TYPE like", value, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeNotLike(String value) {
            addCriterion("PLC_IO_SAVE_TYPE not like", value, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeIn(List values) {
            addCriterion("PLC_IO_SAVE_TYPE in", values, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeNotIn(List values) {
            addCriterion("PLC_IO_SAVE_TYPE not in", values, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeBetween(String value1, String value2) {
            addCriterion("PLC_IO_SAVE_TYPE between", value1, value2, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoSaveTypeNotBetween(String value1, String value2) {
            addCriterion("PLC_IO_SAVE_TYPE not between", value1, value2, "plcIoSaveType");
            return this;
        }

        public Criteria andPlcIoTypeIsNull() {
            criteriaWithoutValue.add("PLC_IO_TYPE is null");
            return this;
        }

        public Criteria andPlcIoTypeIsNotNull() {
            criteriaWithoutValue.add("PLC_IO_TYPE is not null");
            return this;
        }

        public Criteria andPlcIoTypeEqualTo(String value) {
            addCriterion("PLC_IO_TYPE =", value, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeNotEqualTo(String value) {
            addCriterion("PLC_IO_TYPE <>", value, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeGreaterThan(String value) {
            addCriterion("PLC_IO_TYPE >", value, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeGreaterThanOrEqualTo(String value) {
            addCriterion("PLC_IO_TYPE >=", value, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeLessThan(String value) {
            addCriterion("PLC_IO_TYPE <", value, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeLessThanOrEqualTo(String value) {
            addCriterion("PLC_IO_TYPE <=", value, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeLike(String value) {
            addCriterion("PLC_IO_TYPE like", value, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeNotLike(String value) {
            addCriterion("PLC_IO_TYPE not like", value, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeIn(List values) {
            addCriterion("PLC_IO_TYPE in", values, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeNotIn(List values) {
            addCriterion("PLC_IO_TYPE not in", values, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeBetween(String value1, String value2) {
            addCriterion("PLC_IO_TYPE between", value1, value2, "plcIoType");
            return this;
        }

        public Criteria andPlcIoTypeNotBetween(String value1, String value2) {
            addCriterion("PLC_IO_TYPE not between", value1, value2, "plcIoType");
            return this;
        }

        public Criteria andOrganIdIsNull() {
            criteriaWithoutValue.add("ORGAN_ID is null");
            return this;
        }

        public Criteria andOrganIdIsNotNull() {
            criteriaWithoutValue.add("ORGAN_ID is not null");
            return this;
        }

        public Criteria andOrganIdEqualTo(String value) {
            addCriterion("ORGAN_ID =", value, "organId");
            return this;
        }

        public Criteria andOrganIdNotEqualTo(String value) {
            addCriterion("ORGAN_ID <>", value, "organId");
            return this;
        }

        public Criteria andOrganIdGreaterThan(String value) {
            addCriterion("ORGAN_ID >", value, "organId");
            return this;
        }

        public Criteria andOrganIdGreaterThanOrEqualTo(String value) {
            addCriterion("ORGAN_ID >=", value, "organId");
            return this;
        }

        public Criteria andOrganIdLessThan(String value) {
            addCriterion("ORGAN_ID <", value, "organId");
            return this;
        }

        public Criteria andOrganIdLessThanOrEqualTo(String value) {
            addCriterion("ORGAN_ID <=", value, "organId");
            return this;
        }

        public Criteria andOrganIdLike(String value) {
            addCriterion("ORGAN_ID like", value, "organId");
            return this;
        }

        public Criteria andOrganIdNotLike(String value) {
            addCriterion("ORGAN_ID not like", value, "organId");
            return this;
        }

        public Criteria andOrganIdIn(List values) {
            addCriterion("ORGAN_ID in", values, "organId");
            return this;
        }

        public Criteria andOrganIdNotIn(List values) {
            addCriterion("ORGAN_ID not in", values, "organId");
            return this;
        }

        public Criteria andOrganIdBetween(String value1, String value2) {
            addCriterion("ORGAN_ID between", value1, value2, "organId");
            return this;
        }

        public Criteria andOrganIdNotBetween(String value1, String value2) {
            addCriterion("ORGAN_ID not between", value1, value2, "organId");
            return this;
        }
    }
}