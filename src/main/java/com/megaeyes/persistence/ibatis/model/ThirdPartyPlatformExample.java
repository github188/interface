package com.megaeyes.persistence.ibatis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ThirdPartyPlatformExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table THIRD_PARTY_PLATFORM
     *
     * @abatorgenerated Wed May 02 13:22:23 CST 2012
     */
    private String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table THIRD_PARTY_PLATFORM
     *
     * @abatorgenerated Wed May 02 13:22:23 CST 2012
     */
    private List oredCriteria = new ArrayList();

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table THIRD_PARTY_PLATFORM
     *
     * @abatorgenerated Wed May 02 13:22:23 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table THIRD_PARTY_PLATFORM
     *
     * @abatorgenerated Wed May 02 13:22:23 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table THIRD_PARTY_PLATFORM
     *
     * @abatorgenerated Wed May 02 13:22:23 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table THIRD_PARTY_PLATFORM
     *
     * @abatorgenerated Wed May 02 13:22:23 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table THIRD_PARTY_PLATFORM
     *
     * @abatorgenerated Wed May 02 13:22:23 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = new Criteria();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table THIRD_PARTY_PLATFORM
     *
     * @abatorgenerated Wed May 02 13:22:23 CST 2012
     */
    public static class Criteria {
        private List criteriaWithoutValue;

        private List criteriaWithSingleValue;

        private List criteriaWithListValue;

        private List criteriaWithBetweenValue;

        private Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        private void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        private void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        private void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            criteriaWithoutValue.add("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            criteriaWithoutValue.add("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andSipCodeIsNull() {
            criteriaWithoutValue.add("SIP_CODE is null");
            return this;
        }

        public Criteria andSipCodeIsNotNull() {
            criteriaWithoutValue.add("SIP_CODE is not null");
            return this;
        }

        public Criteria andSipCodeEqualTo(String value) {
            addCriterion("SIP_CODE =", value, "sipCode");
            return this;
        }

        public Criteria andSipCodeNotEqualTo(String value) {
            addCriterion("SIP_CODE <>", value, "sipCode");
            return this;
        }

        public Criteria andSipCodeGreaterThan(String value) {
            addCriterion("SIP_CODE >", value, "sipCode");
            return this;
        }

        public Criteria andSipCodeGreaterThanOrEqualTo(String value) {
            addCriterion("SIP_CODE >=", value, "sipCode");
            return this;
        }

        public Criteria andSipCodeLessThan(String value) {
            addCriterion("SIP_CODE <", value, "sipCode");
            return this;
        }

        public Criteria andSipCodeLessThanOrEqualTo(String value) {
            addCriterion("SIP_CODE <=", value, "sipCode");
            return this;
        }

        public Criteria andSipCodeLike(String value) {
            addCriterion("SIP_CODE like", value, "sipCode");
            return this;
        }

        public Criteria andSipCodeNotLike(String value) {
            addCriterion("SIP_CODE not like", value, "sipCode");
            return this;
        }

        public Criteria andSipCodeIn(List values) {
            addCriterion("SIP_CODE in", values, "sipCode");
            return this;
        }

        public Criteria andSipCodeNotIn(List values) {
            addCriterion("SIP_CODE not in", values, "sipCode");
            return this;
        }

        public Criteria andSipCodeBetween(String value1, String value2) {
            addCriterion("SIP_CODE between", value1, value2, "sipCode");
            return this;
        }

        public Criteria andSipCodeNotBetween(String value1, String value2) {
            addCriterion("SIP_CODE not between", value1, value2, "sipCode");
            return this;
        }

        public Criteria andStatusIsNull() {
            criteriaWithoutValue.add("STATUS is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            criteriaWithoutValue.add("STATUS is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("STATUS in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("STATUS not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return this;
        }

        public Criteria andHttpUrlIsNull() {
            criteriaWithoutValue.add("HTTP_URL is null");
            return this;
        }

        public Criteria andHttpUrlIsNotNull() {
            criteriaWithoutValue.add("HTTP_URL is not null");
            return this;
        }

        public Criteria andHttpUrlEqualTo(String value) {
            addCriterion("HTTP_URL =", value, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlNotEqualTo(String value) {
            addCriterion("HTTP_URL <>", value, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlGreaterThan(String value) {
            addCriterion("HTTP_URL >", value, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlGreaterThanOrEqualTo(String value) {
            addCriterion("HTTP_URL >=", value, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlLessThan(String value) {
            addCriterion("HTTP_URL <", value, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlLessThanOrEqualTo(String value) {
            addCriterion("HTTP_URL <=", value, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlLike(String value) {
            addCriterion("HTTP_URL like", value, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlNotLike(String value) {
            addCriterion("HTTP_URL not like", value, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlIn(List values) {
            addCriterion("HTTP_URL in", values, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlNotIn(List values) {
            addCriterion("HTTP_URL not in", values, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlBetween(String value1, String value2) {
            addCriterion("HTTP_URL between", value1, value2, "httpUrl");
            return this;
        }

        public Criteria andHttpUrlNotBetween(String value1, String value2) {
            addCriterion("HTTP_URL not between", value1, value2, "httpUrl");
            return this;
        }

        public Criteria andSipUrlIsNull() {
            criteriaWithoutValue.add("SIP_URL is null");
            return this;
        }

        public Criteria andSipUrlIsNotNull() {
            criteriaWithoutValue.add("SIP_URL is not null");
            return this;
        }

        public Criteria andSipUrlEqualTo(String value) {
            addCriterion("SIP_URL =", value, "sipUrl");
            return this;
        }

        public Criteria andSipUrlNotEqualTo(String value) {
            addCriterion("SIP_URL <>", value, "sipUrl");
            return this;
        }

        public Criteria andSipUrlGreaterThan(String value) {
            addCriterion("SIP_URL >", value, "sipUrl");
            return this;
        }

        public Criteria andSipUrlGreaterThanOrEqualTo(String value) {
            addCriterion("SIP_URL >=", value, "sipUrl");
            return this;
        }

        public Criteria andSipUrlLessThan(String value) {
            addCriterion("SIP_URL <", value, "sipUrl");
            return this;
        }

        public Criteria andSipUrlLessThanOrEqualTo(String value) {
            addCriterion("SIP_URL <=", value, "sipUrl");
            return this;
        }

        public Criteria andSipUrlLike(String value) {
            addCriterion("SIP_URL like", value, "sipUrl");
            return this;
        }

        public Criteria andSipUrlNotLike(String value) {
            addCriterion("SIP_URL not like", value, "sipUrl");
            return this;
        }

        public Criteria andSipUrlIn(List values) {
            addCriterion("SIP_URL in", values, "sipUrl");
            return this;
        }

        public Criteria andSipUrlNotIn(List values) {
            addCriterion("SIP_URL not in", values, "sipUrl");
            return this;
        }

        public Criteria andSipUrlBetween(String value1, String value2) {
            addCriterion("SIP_URL between", value1, value2, "sipUrl");
            return this;
        }

        public Criteria andSipUrlNotBetween(String value1, String value2) {
            addCriterion("SIP_URL not between", value1, value2, "sipUrl");
            return this;
        }

        public Criteria andNameIsNull() {
            criteriaWithoutValue.add("NAME is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            criteriaWithoutValue.add("NAME is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List values) {
            addCriterion("NAME in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List values) {
            addCriterion("NAME not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return this;
        }

        public Criteria andHeartbeatTimeIsNull() {
            criteriaWithoutValue.add("HEARTBEAT_TIME is null");
            return this;
        }

        public Criteria andHeartbeatTimeIsNotNull() {
            criteriaWithoutValue.add("HEARTBEAT_TIME is not null");
            return this;
        }

        public Criteria andHeartbeatTimeEqualTo(Long value) {
            addCriterion("HEARTBEAT_TIME =", value, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeNotEqualTo(Long value) {
            addCriterion("HEARTBEAT_TIME <>", value, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeGreaterThan(Long value) {
            addCriterion("HEARTBEAT_TIME >", value, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("HEARTBEAT_TIME >=", value, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeLessThan(Long value) {
            addCriterion("HEARTBEAT_TIME <", value, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeLessThanOrEqualTo(Long value) {
            addCriterion("HEARTBEAT_TIME <=", value, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeIn(List values) {
            addCriterion("HEARTBEAT_TIME in", values, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeNotIn(List values) {
            addCriterion("HEARTBEAT_TIME not in", values, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeBetween(Long value1, Long value2) {
            addCriterion("HEARTBEAT_TIME between", value1, value2, "heartbeatTime");
            return this;
        }

        public Criteria andHeartbeatTimeNotBetween(Long value1, Long value2) {
            addCriterion("HEARTBEAT_TIME not between", value1, value2, "heartbeatTime");
            return this;
        }
    }
}