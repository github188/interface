package com.megaeyes.persistence.ibatis.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EpRTaskEmployeeExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    public EpRTaskEmployeeExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    protected EpRTaskEmployeeExample(EpRTaskEmployeeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table HBDW1.EP_R_TASK_EMPLOYEE
     *
     * @abatorgenerated Mon May 14 09:29:45 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andTaskIdIsNull() {
            addCriterion("TASK_ID is null");
            return this;
        }

        public Criteria andTaskIdIsNotNull() {
            addCriterion("TASK_ID is not null");
            return this;
        }

        public Criteria andTaskIdEqualTo(String value) {
            addCriterion("TASK_ID =", value, "taskId");
            return this;
        }

        public Criteria andTaskIdNotEqualTo(String value) {
            addCriterion("TASK_ID <>", value, "taskId");
            return this;
        }

        public Criteria andTaskIdGreaterThan(String value) {
            addCriterion("TASK_ID >", value, "taskId");
            return this;
        }

        public Criteria andTaskIdGreaterThanOrEqualTo(String value) {
            addCriterion("TASK_ID >=", value, "taskId");
            return this;
        }

        public Criteria andTaskIdLessThan(String value) {
            addCriterion("TASK_ID <", value, "taskId");
            return this;
        }

        public Criteria andTaskIdLessThanOrEqualTo(String value) {
            addCriterion("TASK_ID <=", value, "taskId");
            return this;
        }

        public Criteria andTaskIdLike(String value) {
            addCriterion("TASK_ID like", value, "taskId");
            return this;
        }

        public Criteria andTaskIdNotLike(String value) {
            addCriterion("TASK_ID not like", value, "taskId");
            return this;
        }

        public Criteria andTaskIdIn(List values) {
            addCriterion("TASK_ID in", values, "taskId");
            return this;
        }

        public Criteria andTaskIdNotIn(List values) {
            addCriterion("TASK_ID not in", values, "taskId");
            return this;
        }

        public Criteria andTaskIdBetween(String value1, String value2) {
            addCriterion("TASK_ID between", value1, value2, "taskId");
            return this;
        }

        public Criteria andTaskIdNotBetween(String value1, String value2) {
            addCriterion("TASK_ID not between", value1, value2, "taskId");
            return this;
        }

        public Criteria andEmployeeIdIsNull() {
            addCriterion("EMPLOYEE_ID is null");
            return this;
        }

        public Criteria andEmployeeIdIsNotNull() {
            addCriterion("EMPLOYEE_ID is not null");
            return this;
        }

        public Criteria andEmployeeIdEqualTo(String value) {
            addCriterion("EMPLOYEE_ID =", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotEqualTo(String value) {
            addCriterion("EMPLOYEE_ID <>", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdGreaterThan(String value) {
            addCriterion("EMPLOYEE_ID >", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdGreaterThanOrEqualTo(String value) {
            addCriterion("EMPLOYEE_ID >=", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLessThan(String value) {
            addCriterion("EMPLOYEE_ID <", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLessThanOrEqualTo(String value) {
            addCriterion("EMPLOYEE_ID <=", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLike(String value) {
            addCriterion("EMPLOYEE_ID like", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotLike(String value) {
            addCriterion("EMPLOYEE_ID not like", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdIn(List values) {
            addCriterion("EMPLOYEE_ID in", values, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotIn(List values) {
            addCriterion("EMPLOYEE_ID not in", values, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdBetween(String value1, String value2) {
            addCriterion("EMPLOYEE_ID between", value1, value2, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotBetween(String value1, String value2) {
            addCriterion("EMPLOYEE_ID not between", value1, value2, "employeeId");
            return this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List values) {
            addCriterion("USER_ID in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List values) {
            addCriterion("USER_ID not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return this;
        }

        public Criteria andAllotUserIdIsNull() {
            addCriterion("ALLOT_USER_ID is null");
            return this;
        }

        public Criteria andAllotUserIdIsNotNull() {
            addCriterion("ALLOT_USER_ID is not null");
            return this;
        }

        public Criteria andAllotUserIdEqualTo(String value) {
            addCriterion("ALLOT_USER_ID =", value, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdNotEqualTo(String value) {
            addCriterion("ALLOT_USER_ID <>", value, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdGreaterThan(String value) {
            addCriterion("ALLOT_USER_ID >", value, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("ALLOT_USER_ID >=", value, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdLessThan(String value) {
            addCriterion("ALLOT_USER_ID <", value, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdLessThanOrEqualTo(String value) {
            addCriterion("ALLOT_USER_ID <=", value, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdLike(String value) {
            addCriterion("ALLOT_USER_ID like", value, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdNotLike(String value) {
            addCriterion("ALLOT_USER_ID not like", value, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdIn(List values) {
            addCriterion("ALLOT_USER_ID in", values, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdNotIn(List values) {
            addCriterion("ALLOT_USER_ID not in", values, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdBetween(String value1, String value2) {
            addCriterion("ALLOT_USER_ID between", value1, value2, "allotUserId");
            return this;
        }

        public Criteria andAllotUserIdNotBetween(String value1, String value2) {
            addCriterion("ALLOT_USER_ID not between", value1, value2, "allotUserId");
            return this;
        }

        public Criteria andExecuteTimeIsNull() {
            addCriterion("EXECUTE_TIME is null");
            return this;
        }

        public Criteria andExecuteTimeIsNotNull() {
            addCriterion("EXECUTE_TIME is not null");
            return this;
        }

        public Criteria andExecuteTimeEqualTo(String value) {
            addCriterion("EXECUTE_TIME =", value, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeNotEqualTo(String value) {
            addCriterion("EXECUTE_TIME <>", value, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeGreaterThan(String value) {
            addCriterion("EXECUTE_TIME >", value, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeGreaterThanOrEqualTo(String value) {
            addCriterion("EXECUTE_TIME >=", value, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeLessThan(String value) {
            addCriterion("EXECUTE_TIME <", value, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeLessThanOrEqualTo(String value) {
            addCriterion("EXECUTE_TIME <=", value, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeLike(String value) {
            addCriterion("EXECUTE_TIME like", value, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeNotLike(String value) {
            addCriterion("EXECUTE_TIME not like", value, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeIn(List values) {
            addCriterion("EXECUTE_TIME in", values, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeNotIn(List values) {
            addCriterion("EXECUTE_TIME not in", values, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeBetween(String value1, String value2) {
            addCriterion("EXECUTE_TIME between", value1, value2, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeNotBetween(String value1, String value2) {
            addCriterion("EXECUTE_TIME not between", value1, value2, "executeTime");
            return this;
        }

        public Criteria andExecuteTimeTypeIsNull() {
            addCriterion("EXECUTE_TIME_TYPE is null");
            return this;
        }

        public Criteria andExecuteTimeTypeIsNotNull() {
            addCriterion("EXECUTE_TIME_TYPE is not null");
            return this;
        }

        public Criteria andExecuteTimeTypeEqualTo(BigDecimal value) {
            addCriterion("EXECUTE_TIME_TYPE =", value, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeNotEqualTo(BigDecimal value) {
            addCriterion("EXECUTE_TIME_TYPE <>", value, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeGreaterThan(BigDecimal value) {
            addCriterion("EXECUTE_TIME_TYPE >", value, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EXECUTE_TIME_TYPE >=", value, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeLessThan(BigDecimal value) {
            addCriterion("EXECUTE_TIME_TYPE <", value, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EXECUTE_TIME_TYPE <=", value, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeIn(List values) {
            addCriterion("EXECUTE_TIME_TYPE in", values, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeNotIn(List values) {
            addCriterion("EXECUTE_TIME_TYPE not in", values, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXECUTE_TIME_TYPE between", value1, value2, "executeTimeType");
            return this;
        }

        public Criteria andExecuteTimeTypeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXECUTE_TIME_TYPE not between", value1, value2, "executeTimeType");
            return this;
        }

        public Criteria andTaskTypeIsNull() {
            addCriterion("TASK_TYPE is null");
            return this;
        }

        public Criteria andTaskTypeIsNotNull() {
            addCriterion("TASK_TYPE is not null");
            return this;
        }

        public Criteria andTaskTypeEqualTo(BigDecimal value) {
            addCriterion("TASK_TYPE =", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotEqualTo(BigDecimal value) {
            addCriterion("TASK_TYPE <>", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeGreaterThan(BigDecimal value) {
            addCriterion("TASK_TYPE >", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TASK_TYPE >=", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeLessThan(BigDecimal value) {
            addCriterion("TASK_TYPE <", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TASK_TYPE <=", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeIn(List values) {
            addCriterion("TASK_TYPE in", values, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotIn(List values) {
            addCriterion("TASK_TYPE not in", values, "taskType");
            return this;
        }

        public Criteria andTaskTypeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TASK_TYPE between", value1, value2, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TASK_TYPE not between", value1, value2, "taskType");
            return this;
        }

        public Criteria andSupportEmployeeIsNull() {
            addCriterion("SUPPORT_EMPLOYEE is null");
            return this;
        }

        public Criteria andSupportEmployeeIsNotNull() {
            addCriterion("SUPPORT_EMPLOYEE is not null");
            return this;
        }

        public Criteria andSupportEmployeeEqualTo(String value) {
            addCriterion("SUPPORT_EMPLOYEE =", value, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeNotEqualTo(String value) {
            addCriterion("SUPPORT_EMPLOYEE <>", value, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeGreaterThan(String value) {
            addCriterion("SUPPORT_EMPLOYEE >", value, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeGreaterThanOrEqualTo(String value) {
            addCriterion("SUPPORT_EMPLOYEE >=", value, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeLessThan(String value) {
            addCriterion("SUPPORT_EMPLOYEE <", value, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeLessThanOrEqualTo(String value) {
            addCriterion("SUPPORT_EMPLOYEE <=", value, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeLike(String value) {
            addCriterion("SUPPORT_EMPLOYEE like", value, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeNotLike(String value) {
            addCriterion("SUPPORT_EMPLOYEE not like", value, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeIn(List values) {
            addCriterion("SUPPORT_EMPLOYEE in", values, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeNotIn(List values) {
            addCriterion("SUPPORT_EMPLOYEE not in", values, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeBetween(String value1, String value2) {
            addCriterion("SUPPORT_EMPLOYEE between", value1, value2, "supportEmployee");
            return this;
        }

        public Criteria andSupportEmployeeNotBetween(String value1, String value2) {
            addCriterion("SUPPORT_EMPLOYEE not between", value1, value2, "supportEmployee");
            return this;
        }
    }
}