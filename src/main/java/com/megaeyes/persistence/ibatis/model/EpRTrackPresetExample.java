package com.megaeyes.persistence.ibatis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EpRTrackPresetExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table EP_R_TRACK_PRESET
     *
     * @abatorgenerated Wed Apr 18 14:52:13 CST 2012
     */
    private String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table EP_R_TRACK_PRESET
     *
     * @abatorgenerated Wed Apr 18 14:52:13 CST 2012
     */
    private List oredCriteria = new ArrayList();

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_TRACK_PRESET
     *
     * @abatorgenerated Wed Apr 18 14:52:13 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_TRACK_PRESET
     *
     * @abatorgenerated Wed Apr 18 14:52:13 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_TRACK_PRESET
     *
     * @abatorgenerated Wed Apr 18 14:52:13 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_TRACK_PRESET
     *
     * @abatorgenerated Wed Apr 18 14:52:13 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table EP_R_TRACK_PRESET
     *
     * @abatorgenerated Wed Apr 18 14:52:13 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = new Criteria();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table EP_R_TRACK_PRESET
     *
     * @abatorgenerated Wed Apr 18 14:52:13 CST 2012
     */
    public static class Criteria {
        private List criteriaWithoutValue;

        private List criteriaWithSingleValue;

        private List criteriaWithListValue;

        private List criteriaWithBetweenValue;

        private Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        private void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        private void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        private void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTrackIdIsNull() {
            criteriaWithoutValue.add("TRACK_ID is null");
            return this;
        }

        public Criteria andTrackIdIsNotNull() {
            criteriaWithoutValue.add("TRACK_ID is not null");
            return this;
        }

        public Criteria andTrackIdEqualTo(String value) {
            addCriterion("TRACK_ID =", value, "trackId");
            return this;
        }

        public Criteria andTrackIdNotEqualTo(String value) {
            addCriterion("TRACK_ID <>", value, "trackId");
            return this;
        }

        public Criteria andTrackIdGreaterThan(String value) {
            addCriterion("TRACK_ID >", value, "trackId");
            return this;
        }

        public Criteria andTrackIdGreaterThanOrEqualTo(String value) {
            addCriterion("TRACK_ID >=", value, "trackId");
            return this;
        }

        public Criteria andTrackIdLessThan(String value) {
            addCriterion("TRACK_ID <", value, "trackId");
            return this;
        }

        public Criteria andTrackIdLessThanOrEqualTo(String value) {
            addCriterion("TRACK_ID <=", value, "trackId");
            return this;
        }

        public Criteria andTrackIdLike(String value) {
            addCriterion("TRACK_ID like", value, "trackId");
            return this;
        }

        public Criteria andTrackIdNotLike(String value) {
            addCriterion("TRACK_ID not like", value, "trackId");
            return this;
        }

        public Criteria andTrackIdIn(List values) {
            addCriterion("TRACK_ID in", values, "trackId");
            return this;
        }

        public Criteria andTrackIdNotIn(List values) {
            addCriterion("TRACK_ID not in", values, "trackId");
            return this;
        }

        public Criteria andTrackIdBetween(String value1, String value2) {
            addCriterion("TRACK_ID between", value1, value2, "trackId");
            return this;
        }

        public Criteria andTrackIdNotBetween(String value1, String value2) {
            addCriterion("TRACK_ID not between", value1, value2, "trackId");
            return this;
        }

        public Criteria andPresetIdIsNull() {
            criteriaWithoutValue.add("PRESET_ID is null");
            return this;
        }

        public Criteria andPresetIdIsNotNull() {
            criteriaWithoutValue.add("PRESET_ID is not null");
            return this;
        }

        public Criteria andPresetIdEqualTo(String value) {
            addCriterion("PRESET_ID =", value, "presetId");
            return this;
        }

        public Criteria andPresetIdNotEqualTo(String value) {
            addCriterion("PRESET_ID <>", value, "presetId");
            return this;
        }

        public Criteria andPresetIdGreaterThan(String value) {
            addCriterion("PRESET_ID >", value, "presetId");
            return this;
        }

        public Criteria andPresetIdGreaterThanOrEqualTo(String value) {
            addCriterion("PRESET_ID >=", value, "presetId");
            return this;
        }

        public Criteria andPresetIdLessThan(String value) {
            addCriterion("PRESET_ID <", value, "presetId");
            return this;
        }

        public Criteria andPresetIdLessThanOrEqualTo(String value) {
            addCriterion("PRESET_ID <=", value, "presetId");
            return this;
        }

        public Criteria andPresetIdLike(String value) {
            addCriterion("PRESET_ID like", value, "presetId");
            return this;
        }

        public Criteria andPresetIdNotLike(String value) {
            addCriterion("PRESET_ID not like", value, "presetId");
            return this;
        }

        public Criteria andPresetIdIn(List values) {
            addCriterion("PRESET_ID in", values, "presetId");
            return this;
        }

        public Criteria andPresetIdNotIn(List values) {
            addCriterion("PRESET_ID not in", values, "presetId");
            return this;
        }

        public Criteria andPresetIdBetween(String value1, String value2) {
            addCriterion("PRESET_ID between", value1, value2, "presetId");
            return this;
        }

        public Criteria andPresetIdNotBetween(String value1, String value2) {
            addCriterion("PRESET_ID not between", value1, value2, "presetId");
            return this;
        }

        public Criteria andSeqIsNull() {
            criteriaWithoutValue.add("SEQ is null");
            return this;
        }

        public Criteria andSeqIsNotNull() {
            criteriaWithoutValue.add("SEQ is not null");
            return this;
        }

        public Criteria andSeqEqualTo(Integer value) {
            addCriterion("SEQ =", value, "seq");
            return this;
        }

        public Criteria andSeqNotEqualTo(Integer value) {
            addCriterion("SEQ <>", value, "seq");
            return this;
        }

        public Criteria andSeqGreaterThan(Integer value) {
            addCriterion("SEQ >", value, "seq");
            return this;
        }

        public Criteria andSeqGreaterThanOrEqualTo(Integer value) {
            addCriterion("SEQ >=", value, "seq");
            return this;
        }

        public Criteria andSeqLessThan(Integer value) {
            addCriterion("SEQ <", value, "seq");
            return this;
        }

        public Criteria andSeqLessThanOrEqualTo(Integer value) {
            addCriterion("SEQ <=", value, "seq");
            return this;
        }

        public Criteria andSeqIn(List values) {
            addCriterion("SEQ in", values, "seq");
            return this;
        }

        public Criteria andSeqNotIn(List values) {
            addCriterion("SEQ not in", values, "seq");
            return this;
        }

        public Criteria andSeqBetween(Integer value1, Integer value2) {
            addCriterion("SEQ between", value1, value2, "seq");
            return this;
        }

        public Criteria andSeqNotBetween(Integer value1, Integer value2) {
            addCriterion("SEQ not between", value1, value2, "seq");
            return this;
        }

        public Criteria andDurationIsNull() {
            criteriaWithoutValue.add("DURATION is null");
            return this;
        }

        public Criteria andDurationIsNotNull() {
            criteriaWithoutValue.add("DURATION is not null");
            return this;
        }

        public Criteria andDurationEqualTo(String value) {
            addCriterion("DURATION =", value, "duration");
            return this;
        }

        public Criteria andDurationNotEqualTo(String value) {
            addCriterion("DURATION <>", value, "duration");
            return this;
        }

        public Criteria andDurationGreaterThan(String value) {
            addCriterion("DURATION >", value, "duration");
            return this;
        }

        public Criteria andDurationGreaterThanOrEqualTo(String value) {
            addCriterion("DURATION >=", value, "duration");
            return this;
        }

        public Criteria andDurationLessThan(String value) {
            addCriterion("DURATION <", value, "duration");
            return this;
        }

        public Criteria andDurationLessThanOrEqualTo(String value) {
            addCriterion("DURATION <=", value, "duration");
            return this;
        }

        public Criteria andDurationLike(String value) {
            addCriterion("DURATION like", value, "duration");
            return this;
        }

        public Criteria andDurationNotLike(String value) {
            addCriterion("DURATION not like", value, "duration");
            return this;
        }

        public Criteria andDurationIn(List values) {
            addCriterion("DURATION in", values, "duration");
            return this;
        }

        public Criteria andDurationNotIn(List values) {
            addCriterion("DURATION not in", values, "duration");
            return this;
        }

        public Criteria andDurationBetween(String value1, String value2) {
            addCriterion("DURATION between", value1, value2, "duration");
            return this;
        }

        public Criteria andDurationNotBetween(String value1, String value2) {
            addCriterion("DURATION not between", value1, value2, "duration");
            return this;
        }
    }
}