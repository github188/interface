package com.megaeyes.persistence.ibatis.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class AcAttendanceCheckRecordExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    public AcAttendanceCheckRecordExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    protected AcAttendanceCheckRecordExample(AcAttendanceCheckRecordExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table AC_ATTENDANCE_CHECK_RECORD
     *
     * @abatorgenerated Mon Mar 04 14:13:29 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List dateList = new ArrayList();
            Iterator iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(((Date)iter.next()).getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andEmployeeIdIsNull() {
            addCriterion("EMPLOYEE_ID is null");
            return this;
        }

        public Criteria andEmployeeIdIsNotNull() {
            addCriterion("EMPLOYEE_ID is not null");
            return this;
        }

        public Criteria andEmployeeIdEqualTo(String value) {
            addCriterion("EMPLOYEE_ID =", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotEqualTo(String value) {
            addCriterion("EMPLOYEE_ID <>", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdGreaterThan(String value) {
            addCriterion("EMPLOYEE_ID >", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdGreaterThanOrEqualTo(String value) {
            addCriterion("EMPLOYEE_ID >=", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLessThan(String value) {
            addCriterion("EMPLOYEE_ID <", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLessThanOrEqualTo(String value) {
            addCriterion("EMPLOYEE_ID <=", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLike(String value) {
            addCriterion("EMPLOYEE_ID like", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotLike(String value) {
            addCriterion("EMPLOYEE_ID not like", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdIn(List values) {
            addCriterion("EMPLOYEE_ID in", values, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotIn(List values) {
            addCriterion("EMPLOYEE_ID not in", values, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdBetween(String value1, String value2) {
            addCriterion("EMPLOYEE_ID between", value1, value2, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotBetween(String value1, String value2) {
            addCriterion("EMPLOYEE_ID not between", value1, value2, "employeeId");
            return this;
        }

        public Criteria andOrganIdIsNull() {
            addCriterion("ORGAN_ID is null");
            return this;
        }

        public Criteria andOrganIdIsNotNull() {
            addCriterion("ORGAN_ID is not null");
            return this;
        }

        public Criteria andOrganIdEqualTo(String value) {
            addCriterion("ORGAN_ID =", value, "organId");
            return this;
        }

        public Criteria andOrganIdNotEqualTo(String value) {
            addCriterion("ORGAN_ID <>", value, "organId");
            return this;
        }

        public Criteria andOrganIdGreaterThan(String value) {
            addCriterion("ORGAN_ID >", value, "organId");
            return this;
        }

        public Criteria andOrganIdGreaterThanOrEqualTo(String value) {
            addCriterion("ORGAN_ID >=", value, "organId");
            return this;
        }

        public Criteria andOrganIdLessThan(String value) {
            addCriterion("ORGAN_ID <", value, "organId");
            return this;
        }

        public Criteria andOrganIdLessThanOrEqualTo(String value) {
            addCriterion("ORGAN_ID <=", value, "organId");
            return this;
        }

        public Criteria andOrganIdLike(String value) {
            addCriterion("ORGAN_ID like", value, "organId");
            return this;
        }

        public Criteria andOrganIdNotLike(String value) {
            addCriterion("ORGAN_ID not like", value, "organId");
            return this;
        }

        public Criteria andOrganIdIn(List values) {
            addCriterion("ORGAN_ID in", values, "organId");
            return this;
        }

        public Criteria andOrganIdNotIn(List values) {
            addCriterion("ORGAN_ID not in", values, "organId");
            return this;
        }

        public Criteria andOrganIdBetween(String value1, String value2) {
            addCriterion("ORGAN_ID between", value1, value2, "organId");
            return this;
        }

        public Criteria andOrganIdNotBetween(String value1, String value2) {
            addCriterion("ORGAN_ID not between", value1, value2, "organId");
            return this;
        }

        public Criteria andBranchIdIsNull() {
            addCriterion("BRANCH_ID is null");
            return this;
        }

        public Criteria andBranchIdIsNotNull() {
            addCriterion("BRANCH_ID is not null");
            return this;
        }

        public Criteria andBranchIdEqualTo(String value) {
            addCriterion("BRANCH_ID =", value, "branchId");
            return this;
        }

        public Criteria andBranchIdNotEqualTo(String value) {
            addCriterion("BRANCH_ID <>", value, "branchId");
            return this;
        }

        public Criteria andBranchIdGreaterThan(String value) {
            addCriterion("BRANCH_ID >", value, "branchId");
            return this;
        }

        public Criteria andBranchIdGreaterThanOrEqualTo(String value) {
            addCriterion("BRANCH_ID >=", value, "branchId");
            return this;
        }

        public Criteria andBranchIdLessThan(String value) {
            addCriterion("BRANCH_ID <", value, "branchId");
            return this;
        }

        public Criteria andBranchIdLessThanOrEqualTo(String value) {
            addCriterion("BRANCH_ID <=", value, "branchId");
            return this;
        }

        public Criteria andBranchIdLike(String value) {
            addCriterion("BRANCH_ID like", value, "branchId");
            return this;
        }

        public Criteria andBranchIdNotLike(String value) {
            addCriterion("BRANCH_ID not like", value, "branchId");
            return this;
        }

        public Criteria andBranchIdIn(List values) {
            addCriterion("BRANCH_ID in", values, "branchId");
            return this;
        }

        public Criteria andBranchIdNotIn(List values) {
            addCriterion("BRANCH_ID not in", values, "branchId");
            return this;
        }

        public Criteria andBranchIdBetween(String value1, String value2) {
            addCriterion("BRANCH_ID between", value1, value2, "branchId");
            return this;
        }

        public Criteria andBranchIdNotBetween(String value1, String value2) {
            addCriterion("BRANCH_ID not between", value1, value2, "branchId");
            return this;
        }

        public Criteria andRecordDatetimeIsNull() {
            addCriterion("RECORD_DATETIME is null");
            return this;
        }

        public Criteria andRecordDatetimeIsNotNull() {
            addCriterion("RECORD_DATETIME is not null");
            return this;
        }

        public Criteria andRecordDatetimeEqualTo(Date value) {
            addCriterionForJDBCDate("RECORD_DATETIME =", value, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("RECORD_DATETIME <>", value, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeGreaterThan(Date value) {
            addCriterionForJDBCDate("RECORD_DATETIME >", value, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("RECORD_DATETIME >=", value, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeLessThan(Date value) {
            addCriterionForJDBCDate("RECORD_DATETIME <", value, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("RECORD_DATETIME <=", value, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeIn(List values) {
            addCriterionForJDBCDate("RECORD_DATETIME in", values, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeNotIn(List values) {
            addCriterionForJDBCDate("RECORD_DATETIME not in", values, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("RECORD_DATETIME between", value1, value2, "recordDatetime");
            return this;
        }

        public Criteria andRecordDatetimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("RECORD_DATETIME not between", value1, value2, "recordDatetime");
            return this;
        }

        public Criteria andStateIsNull() {
            addCriterion("STATE is null");
            return this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("STATE is not null");
            return this;
        }

        public Criteria andStateEqualTo(BigDecimal value) {
            addCriterion("STATE =", value, "state");
            return this;
        }

        public Criteria andStateNotEqualTo(BigDecimal value) {
            addCriterion("STATE <>", value, "state");
            return this;
        }

        public Criteria andStateGreaterThan(BigDecimal value) {
            addCriterion("STATE >", value, "state");
            return this;
        }

        public Criteria andStateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("STATE >=", value, "state");
            return this;
        }

        public Criteria andStateLessThan(BigDecimal value) {
            addCriterion("STATE <", value, "state");
            return this;
        }

        public Criteria andStateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("STATE <=", value, "state");
            return this;
        }

        public Criteria andStateIn(List values) {
            addCriterion("STATE in", values, "state");
            return this;
        }

        public Criteria andStateNotIn(List values) {
            addCriterion("STATE not in", values, "state");
            return this;
        }

        public Criteria andStateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("STATE between", value1, value2, "state");
            return this;
        }

        public Criteria andStateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("STATE not between", value1, value2, "state");
            return this;
        }

        public Criteria andLateStateIsNull() {
            addCriterion("LATE_STATE is null");
            return this;
        }

        public Criteria andLateStateIsNotNull() {
            addCriterion("LATE_STATE is not null");
            return this;
        }

        public Criteria andLateStateEqualTo(BigDecimal value) {
            addCriterion("LATE_STATE =", value, "lateState");
            return this;
        }

        public Criteria andLateStateNotEqualTo(BigDecimal value) {
            addCriterion("LATE_STATE <>", value, "lateState");
            return this;
        }

        public Criteria andLateStateGreaterThan(BigDecimal value) {
            addCriterion("LATE_STATE >", value, "lateState");
            return this;
        }

        public Criteria andLateStateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LATE_STATE >=", value, "lateState");
            return this;
        }

        public Criteria andLateStateLessThan(BigDecimal value) {
            addCriterion("LATE_STATE <", value, "lateState");
            return this;
        }

        public Criteria andLateStateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LATE_STATE <=", value, "lateState");
            return this;
        }

        public Criteria andLateStateIn(List values) {
            addCriterion("LATE_STATE in", values, "lateState");
            return this;
        }

        public Criteria andLateStateNotIn(List values) {
            addCriterion("LATE_STATE not in", values, "lateState");
            return this;
        }

        public Criteria andLateStateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LATE_STATE between", value1, value2, "lateState");
            return this;
        }

        public Criteria andLateStateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LATE_STATE not between", value1, value2, "lateState");
            return this;
        }

        public Criteria andLateTimeIsNull() {
            addCriterion("LATE_TIME is null");
            return this;
        }

        public Criteria andLateTimeIsNotNull() {
            addCriterion("LATE_TIME is not null");
            return this;
        }

        public Criteria andLateTimeEqualTo(BigDecimal value) {
            addCriterion("LATE_TIME =", value, "lateTime");
            return this;
        }

        public Criteria andLateTimeNotEqualTo(BigDecimal value) {
            addCriterion("LATE_TIME <>", value, "lateTime");
            return this;
        }

        public Criteria andLateTimeGreaterThan(BigDecimal value) {
            addCriterion("LATE_TIME >", value, "lateTime");
            return this;
        }

        public Criteria andLateTimeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LATE_TIME >=", value, "lateTime");
            return this;
        }

        public Criteria andLateTimeLessThan(BigDecimal value) {
            addCriterion("LATE_TIME <", value, "lateTime");
            return this;
        }

        public Criteria andLateTimeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LATE_TIME <=", value, "lateTime");
            return this;
        }

        public Criteria andLateTimeIn(List values) {
            addCriterion("LATE_TIME in", values, "lateTime");
            return this;
        }

        public Criteria andLateTimeNotIn(List values) {
            addCriterion("LATE_TIME not in", values, "lateTime");
            return this;
        }

        public Criteria andLateTimeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LATE_TIME between", value1, value2, "lateTime");
            return this;
        }

        public Criteria andLateTimeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LATE_TIME not between", value1, value2, "lateTime");
            return this;
        }

        public Criteria andLeaveEarlyStateIsNull() {
            addCriterion("LEAVE_EARLY_STATE is null");
            return this;
        }

        public Criteria andLeaveEarlyStateIsNotNull() {
            addCriterion("LEAVE_EARLY_STATE is not null");
            return this;
        }

        public Criteria andLeaveEarlyStateEqualTo(BigDecimal value) {
            addCriterion("LEAVE_EARLY_STATE =", value, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateNotEqualTo(BigDecimal value) {
            addCriterion("LEAVE_EARLY_STATE <>", value, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateGreaterThan(BigDecimal value) {
            addCriterion("LEAVE_EARLY_STATE >", value, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LEAVE_EARLY_STATE >=", value, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateLessThan(BigDecimal value) {
            addCriterion("LEAVE_EARLY_STATE <", value, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LEAVE_EARLY_STATE <=", value, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateIn(List values) {
            addCriterion("LEAVE_EARLY_STATE in", values, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateNotIn(List values) {
            addCriterion("LEAVE_EARLY_STATE not in", values, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LEAVE_EARLY_STATE between", value1, value2, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyStateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LEAVE_EARLY_STATE not between", value1, value2, "leaveEarlyState");
            return this;
        }

        public Criteria andLeaveEarlyTimeIsNull() {
            addCriterion("LEAVE_EARLY_TIME is null");
            return this;
        }

        public Criteria andLeaveEarlyTimeIsNotNull() {
            addCriterion("LEAVE_EARLY_TIME is not null");
            return this;
        }

        public Criteria andLeaveEarlyTimeEqualTo(BigDecimal value) {
            addCriterion("LEAVE_EARLY_TIME =", value, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeNotEqualTo(BigDecimal value) {
            addCriterion("LEAVE_EARLY_TIME <>", value, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeGreaterThan(BigDecimal value) {
            addCriterion("LEAVE_EARLY_TIME >", value, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LEAVE_EARLY_TIME >=", value, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeLessThan(BigDecimal value) {
            addCriterion("LEAVE_EARLY_TIME <", value, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LEAVE_EARLY_TIME <=", value, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeIn(List values) {
            addCriterion("LEAVE_EARLY_TIME in", values, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeNotIn(List values) {
            addCriterion("LEAVE_EARLY_TIME not in", values, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LEAVE_EARLY_TIME between", value1, value2, "leaveEarlyTime");
            return this;
        }

        public Criteria andLeaveEarlyTimeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LEAVE_EARLY_TIME not between", value1, value2, "leaveEarlyTime");
            return this;
        }

        public Criteria andAbsentTimesIsNull() {
            addCriterion("ABSENT_TIMES is null");
            return this;
        }

        public Criteria andAbsentTimesIsNotNull() {
            addCriterion("ABSENT_TIMES is not null");
            return this;
        }

        public Criteria andAbsentTimesEqualTo(BigDecimal value) {
            addCriterion("ABSENT_TIMES =", value, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesNotEqualTo(BigDecimal value) {
            addCriterion("ABSENT_TIMES <>", value, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesGreaterThan(BigDecimal value) {
            addCriterion("ABSENT_TIMES >", value, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ABSENT_TIMES >=", value, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesLessThan(BigDecimal value) {
            addCriterion("ABSENT_TIMES <", value, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ABSENT_TIMES <=", value, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesIn(List values) {
            addCriterion("ABSENT_TIMES in", values, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesNotIn(List values) {
            addCriterion("ABSENT_TIMES not in", values, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ABSENT_TIMES between", value1, value2, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ABSENT_TIMES not between", value1, value2, "absentTimes");
            return this;
        }

        public Criteria andAbsentTimeIsNull() {
            addCriterion("ABSENT_TIME is null");
            return this;
        }

        public Criteria andAbsentTimeIsNotNull() {
            addCriterion("ABSENT_TIME is not null");
            return this;
        }

        public Criteria andAbsentTimeEqualTo(BigDecimal value) {
            addCriterion("ABSENT_TIME =", value, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeNotEqualTo(BigDecimal value) {
            addCriterion("ABSENT_TIME <>", value, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeGreaterThan(BigDecimal value) {
            addCriterion("ABSENT_TIME >", value, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ABSENT_TIME >=", value, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeLessThan(BigDecimal value) {
            addCriterion("ABSENT_TIME <", value, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ABSENT_TIME <=", value, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeIn(List values) {
            addCriterion("ABSENT_TIME in", values, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeNotIn(List values) {
            addCriterion("ABSENT_TIME not in", values, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ABSENT_TIME between", value1, value2, "absentTime");
            return this;
        }

        public Criteria andAbsentTimeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ABSENT_TIME not between", value1, value2, "absentTime");
            return this;
        }

        public Criteria andAffairIsNull() {
            addCriterion("AFFAIR is null");
            return this;
        }

        public Criteria andAffairIsNotNull() {
            addCriterion("AFFAIR is not null");
            return this;
        }

        public Criteria andAffairEqualTo(BigDecimal value) {
            addCriterion("AFFAIR =", value, "affair");
            return this;
        }

        public Criteria andAffairNotEqualTo(BigDecimal value) {
            addCriterion("AFFAIR <>", value, "affair");
            return this;
        }

        public Criteria andAffairGreaterThan(BigDecimal value) {
            addCriterion("AFFAIR >", value, "affair");
            return this;
        }

        public Criteria andAffairGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AFFAIR >=", value, "affair");
            return this;
        }

        public Criteria andAffairLessThan(BigDecimal value) {
            addCriterion("AFFAIR <", value, "affair");
            return this;
        }

        public Criteria andAffairLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AFFAIR <=", value, "affair");
            return this;
        }

        public Criteria andAffairIn(List values) {
            addCriterion("AFFAIR in", values, "affair");
            return this;
        }

        public Criteria andAffairNotIn(List values) {
            addCriterion("AFFAIR not in", values, "affair");
            return this;
        }

        public Criteria andAffairBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AFFAIR between", value1, value2, "affair");
            return this;
        }

        public Criteria andAffairNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AFFAIR not between", value1, value2, "affair");
            return this;
        }

        public Criteria andSickIsNull() {
            addCriterion("SICK is null");
            return this;
        }

        public Criteria andSickIsNotNull() {
            addCriterion("SICK is not null");
            return this;
        }

        public Criteria andSickEqualTo(BigDecimal value) {
            addCriterion("SICK =", value, "sick");
            return this;
        }

        public Criteria andSickNotEqualTo(BigDecimal value) {
            addCriterion("SICK <>", value, "sick");
            return this;
        }

        public Criteria andSickGreaterThan(BigDecimal value) {
            addCriterion("SICK >", value, "sick");
            return this;
        }

        public Criteria andSickGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SICK >=", value, "sick");
            return this;
        }

        public Criteria andSickLessThan(BigDecimal value) {
            addCriterion("SICK <", value, "sick");
            return this;
        }

        public Criteria andSickLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SICK <=", value, "sick");
            return this;
        }

        public Criteria andSickIn(List values) {
            addCriterion("SICK in", values, "sick");
            return this;
        }

        public Criteria andSickNotIn(List values) {
            addCriterion("SICK not in", values, "sick");
            return this;
        }

        public Criteria andSickBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SICK between", value1, value2, "sick");
            return this;
        }

        public Criteria andSickNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SICK not between", value1, value2, "sick");
            return this;
        }

        public Criteria andStartTimeIsNull() {
            addCriterion("START_TIME is null");
            return this;
        }

        public Criteria andStartTimeIsNotNull() {
            addCriterion("START_TIME is not null");
            return this;
        }

        public Criteria andStartTimeEqualTo(String value) {
            addCriterion("START_TIME =", value, "startTime");
            return this;
        }

        public Criteria andStartTimeNotEqualTo(String value) {
            addCriterion("START_TIME <>", value, "startTime");
            return this;
        }

        public Criteria andStartTimeGreaterThan(String value) {
            addCriterion("START_TIME >", value, "startTime");
            return this;
        }

        public Criteria andStartTimeGreaterThanOrEqualTo(String value) {
            addCriterion("START_TIME >=", value, "startTime");
            return this;
        }

        public Criteria andStartTimeLessThan(String value) {
            addCriterion("START_TIME <", value, "startTime");
            return this;
        }

        public Criteria andStartTimeLessThanOrEqualTo(String value) {
            addCriterion("START_TIME <=", value, "startTime");
            return this;
        }

        public Criteria andStartTimeLike(String value) {
            addCriterion("START_TIME like", value, "startTime");
            return this;
        }

        public Criteria andStartTimeNotLike(String value) {
            addCriterion("START_TIME not like", value, "startTime");
            return this;
        }

        public Criteria andStartTimeIn(List values) {
            addCriterion("START_TIME in", values, "startTime");
            return this;
        }

        public Criteria andStartTimeNotIn(List values) {
            addCriterion("START_TIME not in", values, "startTime");
            return this;
        }

        public Criteria andStartTimeBetween(String value1, String value2) {
            addCriterion("START_TIME between", value1, value2, "startTime");
            return this;
        }

        public Criteria andStartTimeNotBetween(String value1, String value2) {
            addCriterion("START_TIME not between", value1, value2, "startTime");
            return this;
        }

        public Criteria andComeTimeIsNull() {
            addCriterion("COME_TIME is null");
            return this;
        }

        public Criteria andComeTimeIsNotNull() {
            addCriterion("COME_TIME is not null");
            return this;
        }

        public Criteria andComeTimeEqualTo(Date value) {
            addCriterionForJDBCDate("COME_TIME =", value, "comeTime");
            return this;
        }

        public Criteria andComeTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("COME_TIME <>", value, "comeTime");
            return this;
        }

        public Criteria andComeTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("COME_TIME >", value, "comeTime");
            return this;
        }

        public Criteria andComeTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("COME_TIME >=", value, "comeTime");
            return this;
        }

        public Criteria andComeTimeLessThan(Date value) {
            addCriterionForJDBCDate("COME_TIME <", value, "comeTime");
            return this;
        }

        public Criteria andComeTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("COME_TIME <=", value, "comeTime");
            return this;
        }

        public Criteria andComeTimeIn(List values) {
            addCriterionForJDBCDate("COME_TIME in", values, "comeTime");
            return this;
        }

        public Criteria andComeTimeNotIn(List values) {
            addCriterionForJDBCDate("COME_TIME not in", values, "comeTime");
            return this;
        }

        public Criteria andComeTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("COME_TIME between", value1, value2, "comeTime");
            return this;
        }

        public Criteria andComeTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("COME_TIME not between", value1, value2, "comeTime");
            return this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("END_TIME is null");
            return this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("END_TIME is not null");
            return this;
        }

        public Criteria andEndTimeEqualTo(String value) {
            addCriterion("END_TIME =", value, "endTime");
            return this;
        }

        public Criteria andEndTimeNotEqualTo(String value) {
            addCriterion("END_TIME <>", value, "endTime");
            return this;
        }

        public Criteria andEndTimeGreaterThan(String value) {
            addCriterion("END_TIME >", value, "endTime");
            return this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(String value) {
            addCriterion("END_TIME >=", value, "endTime");
            return this;
        }

        public Criteria andEndTimeLessThan(String value) {
            addCriterion("END_TIME <", value, "endTime");
            return this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(String value) {
            addCriterion("END_TIME <=", value, "endTime");
            return this;
        }

        public Criteria andEndTimeLike(String value) {
            addCriterion("END_TIME like", value, "endTime");
            return this;
        }

        public Criteria andEndTimeNotLike(String value) {
            addCriterion("END_TIME not like", value, "endTime");
            return this;
        }

        public Criteria andEndTimeIn(List values) {
            addCriterion("END_TIME in", values, "endTime");
            return this;
        }

        public Criteria andEndTimeNotIn(List values) {
            addCriterion("END_TIME not in", values, "endTime");
            return this;
        }

        public Criteria andEndTimeBetween(String value1, String value2) {
            addCriterion("END_TIME between", value1, value2, "endTime");
            return this;
        }

        public Criteria andEndTimeNotBetween(String value1, String value2) {
            addCriterion("END_TIME not between", value1, value2, "endTime");
            return this;
        }

        public Criteria andGoTimeIsNull() {
            addCriterion("GO_TIME is null");
            return this;
        }

        public Criteria andGoTimeIsNotNull() {
            addCriterion("GO_TIME is not null");
            return this;
        }

        public Criteria andGoTimeEqualTo(Date value) {
            addCriterionForJDBCDate("GO_TIME =", value, "goTime");
            return this;
        }

        public Criteria andGoTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("GO_TIME <>", value, "goTime");
            return this;
        }

        public Criteria andGoTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("GO_TIME >", value, "goTime");
            return this;
        }

        public Criteria andGoTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("GO_TIME >=", value, "goTime");
            return this;
        }

        public Criteria andGoTimeLessThan(Date value) {
            addCriterionForJDBCDate("GO_TIME <", value, "goTime");
            return this;
        }

        public Criteria andGoTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("GO_TIME <=", value, "goTime");
            return this;
        }

        public Criteria andGoTimeIn(List values) {
            addCriterionForJDBCDate("GO_TIME in", values, "goTime");
            return this;
        }

        public Criteria andGoTimeNotIn(List values) {
            addCriterionForJDBCDate("GO_TIME not in", values, "goTime");
            return this;
        }

        public Criteria andGoTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("GO_TIME between", value1, value2, "goTime");
            return this;
        }

        public Criteria andGoTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("GO_TIME not between", value1, value2, "goTime");
            return this;
        }

        public Criteria andPrtTimeIsNull() {
            addCriterion("PRT_TIME is null");
            return this;
        }

        public Criteria andPrtTimeIsNotNull() {
            addCriterion("PRT_TIME is not null");
            return this;
        }

        public Criteria andPrtTimeEqualTo(Date value) {
            addCriterionForJDBCDate("PRT_TIME =", value, "prtTime");
            return this;
        }

        public Criteria andPrtTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("PRT_TIME <>", value, "prtTime");
            return this;
        }

        public Criteria andPrtTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("PRT_TIME >", value, "prtTime");
            return this;
        }

        public Criteria andPrtTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("PRT_TIME >=", value, "prtTime");
            return this;
        }

        public Criteria andPrtTimeLessThan(Date value) {
            addCriterionForJDBCDate("PRT_TIME <", value, "prtTime");
            return this;
        }

        public Criteria andPrtTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("PRT_TIME <=", value, "prtTime");
            return this;
        }

        public Criteria andPrtTimeIn(List values) {
            addCriterionForJDBCDate("PRT_TIME in", values, "prtTime");
            return this;
        }

        public Criteria andPrtTimeNotIn(List values) {
            addCriterionForJDBCDate("PRT_TIME not in", values, "prtTime");
            return this;
        }

        public Criteria andPrtTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("PRT_TIME between", value1, value2, "prtTime");
            return this;
        }

        public Criteria andPrtTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("PRT_TIME not between", value1, value2, "prtTime");
            return this;
        }

        public Criteria andNextTimeIsNull() {
            addCriterion("NEXT_TIME is null");
            return this;
        }

        public Criteria andNextTimeIsNotNull() {
            addCriterion("NEXT_TIME is not null");
            return this;
        }

        public Criteria andNextTimeEqualTo(Date value) {
            addCriterionForJDBCDate("NEXT_TIME =", value, "nextTime");
            return this;
        }

        public Criteria andNextTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("NEXT_TIME <>", value, "nextTime");
            return this;
        }

        public Criteria andNextTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("NEXT_TIME >", value, "nextTime");
            return this;
        }

        public Criteria andNextTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("NEXT_TIME >=", value, "nextTime");
            return this;
        }

        public Criteria andNextTimeLessThan(Date value) {
            addCriterionForJDBCDate("NEXT_TIME <", value, "nextTime");
            return this;
        }

        public Criteria andNextTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("NEXT_TIME <=", value, "nextTime");
            return this;
        }

        public Criteria andNextTimeIn(List values) {
            addCriterionForJDBCDate("NEXT_TIME in", values, "nextTime");
            return this;
        }

        public Criteria andNextTimeNotIn(List values) {
            addCriterionForJDBCDate("NEXT_TIME not in", values, "nextTime");
            return this;
        }

        public Criteria andNextTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("NEXT_TIME between", value1, value2, "nextTime");
            return this;
        }

        public Criteria andNextTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("NEXT_TIME not between", value1, value2, "nextTime");
            return this;
        }

        public Criteria andFlagIsNull() {
            addCriterion("FLAG is null");
            return this;
        }

        public Criteria andFlagIsNotNull() {
            addCriterion("FLAG is not null");
            return this;
        }

        public Criteria andFlagEqualTo(BigDecimal value) {
            addCriterion("FLAG =", value, "flag");
            return this;
        }

        public Criteria andFlagNotEqualTo(BigDecimal value) {
            addCriterion("FLAG <>", value, "flag");
            return this;
        }

        public Criteria andFlagGreaterThan(BigDecimal value) {
            addCriterion("FLAG >", value, "flag");
            return this;
        }

        public Criteria andFlagGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FLAG >=", value, "flag");
            return this;
        }

        public Criteria andFlagLessThan(BigDecimal value) {
            addCriterion("FLAG <", value, "flag");
            return this;
        }

        public Criteria andFlagLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FLAG <=", value, "flag");
            return this;
        }

        public Criteria andFlagIn(List values) {
            addCriterion("FLAG in", values, "flag");
            return this;
        }

        public Criteria andFlagNotIn(List values) {
            addCriterion("FLAG not in", values, "flag");
            return this;
        }

        public Criteria andFlagBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLAG between", value1, value2, "flag");
            return this;
        }

        public Criteria andFlagNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLAG not between", value1, value2, "flag");
            return this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return this;
        }

        public Criteria andRemarkIn(List values) {
            addCriterion("REMARK in", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(List values) {
            addCriterion("REMARK not in", values, "remark");
            return this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return this;
        }
    }
}